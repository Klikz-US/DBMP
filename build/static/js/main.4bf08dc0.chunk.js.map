{"version":3,"sources":["services/auth.service.js","actions/auth.action.js","actions/env.action.js","actions/auth-async.action.js","utils/header.util.js","routes/private.route.js","routes/public.route.js","utils/footer.util.js","pages/dashboard.page.js","services/pet.service.js","services/search.service.js","utils/form-input.util.js","utils/form-check.util.js","utils/pagination.util.js","pages/pet-list.page.js","services/photo.service.js","pages/pet-edit.page.js","pages/pet-register.page.js","services/owner.service.js","pages/owner-list.page.js","pages/owner-edit.page.js","pages/owner-register.page.js","services/user.service.js","pages/user-list.page.js","pages/user-register.page.js","pages/user-edit.page.js","pages/setting.page.js","pages/report.page.js","pages/login.page.js","routes/router.js","App.js","reducers/auth.reducer.js","reducers/index.js","store.js","serviceWorker.js","index.js","assets/nophoto.png","assets/logo.png","assets/images/user-register.jpg"],"names":["axios","defaults","withCredentials","setAuthToken","token","headers","common","verifyTokenService","a","post","window","$server_url","error","response","message","userLoginService","email","password","userLogoutService","verifyTokenStarted","silentAuth","type","payload","userLoginFailure","verifyUserSuccess","expiredAt","user","userLogout","verifyTokenAsync","dispatch","result","includes","status","data","userLogoutAsync","Navigation","auth_obj","useSelector","state","auth","useDispatch","isAdmin","Navbar","collapseOnSelect","expand","bg","variant","className","Container","Brand","to","src","logo","width","height","alt","Toggle","aria-controls","Collapse","id","Nav","DropdownButton","title","Button","size","onClick","PrivateRoute","Component","component","rest","undefined","render","props","isAuthenticated","pathname","from","location","PublicRoute","Row","Col","rel","href","target","DashboardPage","useEffect","verifyTokenTimer","setTimeout","moment","diff","clearTimeout","petGetListService","activePage","get","errMsg","petGetService","_id","petRegisterService","pet","petDeleteService","microchip","delete","petUpdateService","patch","petSearchService","req","ownerSearchService","useFormInput","initialValue","useState","value","setValue","onChange","e","useFormCheck","selected","setSelected","PaginationInternal","createUltimatePagination","WrapperComponent","Pagination","itemTypeToComponent","ITEM_TYPES","PAGE","isActive","Item","data-value","active","ELLIPSIS","Ellipsis","FIRST_PAGE_LINK","First","disabled","PREVIOUS_PAGE_LINK","Prev","NEXT_PAGE_LINK","Next","LAST_PAGE_LINK","Last","AppPagination","bind","event","nodeName","dataset","pageNumber","parseInt","parentNode","this","currentPage","totalPages","PetList","pets","setPets","setActivePage","setTotalPages","pageLoading","setPageLoading","searchCategory","searchValue","hasResult","setHasResult","hasSearchError","setHasSearchError","isSearching","setIsSearching","petList","count","fetchData","handleSearch","preventDefault","trim","searchReq","field","searchResult","photoErrorHandle","nophoto","Pet","style","membership","petName","ownerId","ownerName","Date","registered_at","format","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Title","as","Content","photoPath","onError","cursor","console","log","fetchPetData","handleDelete","Form","Group","md","Control","pagination","Table","responsive","maxWidth","position","css","color","loading","map","index","key","photoGetService","photoAddService","PetRegister","useParams","petSpecies","petBreed","petColor","petGender","petBirth","specialNeeds","vetInfo","dateRV","implantedCompany","ownerPhone1","ownerPhone2","ownerPhone3","ownerPhone4","ownerPhone5","ownerPhone6","ownerPhone7","ownerAddress1","ownerAddress2","ownerCity","ownerState","ownerZip","ownerCountry","ownerSecContact","ownerNote","setPet","history","useHistory","formError","setFormError","petPhoto","setpetPhoto","petPhotoPath","setPetPhotoPath","petPhotoPreview","setPetPhotoPreview","petData","photoData","getData","CountryOptions","sortname","name","autoComplete","Card","Header","Body","Label","placeholder","Check","inline","label","checked","Text","File","custom","Input","photo","files","split","length","URL","createObjectURL","data-browse","Image","thumbnail","csc","getAllCountries","country","goBack","FormData","append","ownerGetListService","ownerGetService","ownerRegisterService","owner","ownerDeleteService","ownerUpdateService","OwnerList","owners","setOwners","ownerList","Owner","fetchOwnerData","OwnerRegister","setOwner","push","phone1","phone2","phone3","phone4","phone5","phone6","phone7","address1","address2","city","zip","seccon","spenote","userGetListService","userGetService","userRegisterService","userDeleteService","userUpdateService","UserList","userId","username","users","setUsers","deleteError","setDeleteError","User","phone","role","replace_obj","userList","UserRegister","password_confirm","img","roundedCircle","newUser","UserEdit","setUser","pass","pass_confirm","updateUser","Report","AccountLogin","loginLoading","loginError","Img","userLoginAsync","STLRouter","path","exact","Dashboard","PetEdit","OwnerEdit","Setting","App","authLoading","initialState","action","appReducer","combineReducers","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","Boolean","hostname","match","ReactDOM","store","Store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.4bf08dc0.chunk.js","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n\r\n// set token to the axios\r\nexport const setAuthToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\n// verify refresh token to generate new access token if refresh token is present\r\nexport const verifyTokenService = async () => {\r\n    try {\r\n        return await axios.post(`${window.$server_url}/admin/verifyToken`);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            response: err.message,\r\n        };\r\n    }\r\n};\r\n\r\n// user login API to validate the credential\r\nexport const userLoginService = async (email, password) => {\r\n    try {\r\n        return await axios.post(`${window.$server_url}/admin/login`, {\r\n            email,\r\n            password,\r\n        });\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            response: err.message,\r\n        };\r\n    }\r\n};\r\n\r\n// manage user logout\r\nexport const userLogoutService = async () => {\r\n    try {\r\n        return await axios.post(`${window.$server_url}/admin/logout`);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            response: err.message,\r\n        };\r\n    }\r\n};\r\n","import {\r\n    VERIFY_TOKEN_STARTED, VERIFY_USER_SUCCESS, VERIFY_TOKEN_END, USER_LOGIN_STARTED, USER_LOGIN_FAILURE, USER_LOGOUT\r\n} from \"./env.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\n\r\n// verify token - start\r\nexport const verifyTokenStarted = (silentAuth = false) => {\r\n    return {\r\n        type: VERIFY_TOKEN_STARTED,\r\n        payload: {\r\n            silentAuth\r\n        }\r\n    }\r\n}\r\n\r\n// verify token - end/failure\r\nexport const verifyTokenEnd = () => {\r\n    return {\r\n        type: VERIFY_TOKEN_END\r\n    }\r\n}\r\n\r\n// user login - start\r\nexport const userLoginStarted = () => {\r\n    return {\r\n        type: USER_LOGIN_STARTED\r\n    }\r\n}\r\n\r\n// user login - failure\r\nexport const userLoginFailure = (error = 'Something went wrong. Please try again later.') => {\r\n    return {\r\n        type: USER_LOGIN_FAILURE,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\n// verify token - success\r\nexport const verifyUserSuccess = ({ token, expiredAt, user }) => {\r\n    return {\r\n        type: VERIFY_USER_SUCCESS,\r\n        payload: {\r\n            token,\r\n            expiredAt,\r\n            user,\r\n        }\r\n    }\r\n}\r\n\r\n// handle user logout\r\nexport const userLogout = () => {\r\n    setAuthToken();\r\n    return {\r\n        type: USER_LOGOUT\r\n    }\r\n}","export const VERIFY_TOKEN_STARTED = 'VERIFY_TOKEN_STARTED';\r\nexport const VERIFY_TOKEN_END = 'VERIFY_TOKEN_END';\r\n\r\nexport const USER_LOGIN_STARTED = 'USER_LOGIN_STARTED';\r\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\r\n\r\nexport const VERIFY_USER_SUCCESS = 'VERIFY_USER_SUCCESS';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';","import {\r\n    verifyTokenStarted,\r\n    verifyUserSuccess,\r\n    verifyTokenEnd,\r\n    userLoginStarted,\r\n    userLoginFailure,\r\n    userLogout,\r\n} from \"./auth.action\";\r\n\r\nimport {\r\n    verifyTokenService,\r\n    userLoginService,\r\n    userLogoutService,\r\n} from \"../services/auth.service\";\r\n\r\n// handle verify token\r\nexport const verifyTokenAsync = (silentAuth = false) => async (dispatch) => {\r\n    dispatch(verifyTokenStarted(silentAuth));\r\n\r\n    const result = await verifyTokenService();\r\n\r\n    if (result.error) {\r\n        dispatch(verifyTokenEnd());\r\n        if (result.response && [401, 403].includes(result.response.status))\r\n            dispatch(userLogout());\r\n        return;\r\n    }\r\n\r\n    if (result.status === 204) dispatch(verifyTokenEnd());\r\n    else dispatch(verifyUserSuccess(result.data));\r\n};\r\n\r\n// handle user login\r\nexport const userLoginAsync = (email, password) => async (dispatch) => {\r\n    dispatch(userLoginStarted());\r\n\r\n    const result = await userLoginService(email, password);\r\n\r\n    if (result.error) {\r\n        dispatch(userLoginFailure(result.response));\r\n        return;\r\n    }\r\n\r\n    dispatch(verifyUserSuccess(result.data));\r\n};\r\n\r\n// handle user logout\r\nexport const userLogoutAsync = () => (dispatch) => {\r\n    dispatch(userLogout());\r\n    userLogoutService();\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport { FiLogOut, FiSettings } from \"react-icons/fi\";\r\n\r\nimport { userLogoutAsync } from \"../actions/auth-async.action\";\r\n\r\nimport logo from \"./../assets/logo.png\";\r\n\r\nexport default function Navigation() {\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAdmin } = auth_obj.user;\r\n\r\n    const handleLogout = () => {\r\n        dispatch(userLogoutAsync());\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar\r\n                collapseOnSelect\r\n                expand=\"lg\"\r\n                bg=\"info\"\r\n                variant=\"dark\"\r\n                className=\"shadow p-0 text-white\"\r\n            >\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <Link to=\"/\">\r\n                            <img\r\n                                src={logo}\r\n                                width=\"auto\"\r\n                                height=\"80\"\r\n                                alt=\"STL Portal\"\r\n                            />\r\n                        </Link>\r\n                    </Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            {isAdmin && (\r\n                                <DropdownButton\r\n                                    variant=\"danger\"\r\n                                    title=\"Administration \"\r\n                                    className=\"mr-4\"\r\n                                >\r\n                                    <Link\r\n                                        to=\"/users\"\r\n                                        className=\"d-block px-3 py-2 text-dark\"\r\n                                    >\r\n                                        Rep Accounts\r\n                                    </Link>\r\n                                    <Link\r\n                                        to=\"/users/add\"\r\n                                        className=\"d-block px-3 py-2 text-dark\"\r\n                                    >\r\n                                        Add New Rep\r\n                                    </Link>\r\n                                </DropdownButton>\r\n                            )}\r\n\r\n                            <DropdownButton\r\n                                variant=\"danger\"\r\n                                title=\"Manage Pets \"\r\n                                className=\"mr-4\"\r\n                            >\r\n                                <Link\r\n                                    to=\"/pets\"\r\n                                    className=\"d-block px-3 py-2 text-dark\"\r\n                                >\r\n                                    All Pets\r\n                                </Link>\r\n                                <Link\r\n                                    to=\"/pets/register\"\r\n                                    className=\"d-block px-3 py-2 text-dark\"\r\n                                >\r\n                                    Add New Pet\r\n                                </Link>\r\n                            </DropdownButton>\r\n\r\n                            <DropdownButton\r\n                                variant=\"danger\"\r\n                                title=\"Manage Owners \"\r\n                                className=\"mr-4\"\r\n                            >\r\n                                <Link\r\n                                    to=\"/owners\"\r\n                                    className=\"d-block px-3 py-2 text-dark\"\r\n                                >\r\n                                    All Owners\r\n                                </Link>\r\n                                <Link\r\n                                    to=\"/owners/register\"\r\n                                    className=\"d-block px-3 py-2 text-dark\"\r\n                                >\r\n                                    Add New Owner\r\n                                </Link>\r\n                            </DropdownButton>\r\n                        </Nav>\r\n\r\n                        <Nav className=\"ml-auto\">\r\n                            <Link to=\"/setting\" className=\"d-block\">\r\n                                <Button className=\"px-2\" variant=\"info\">\r\n                                    <FiSettings\r\n                                        size={24}\r\n                                        className=\"text-white\"\r\n                                    />\r\n                                </Button>\r\n                            </Link>\r\n\r\n                            <Button\r\n                                className=\"px-2\"\r\n                                variant=\"info\"\r\n                                onClick={handleLogout}\r\n                            >\r\n                                <FiLogOut size={24} className=\"text-white\" />\r\n                            </Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    if (rest.isAdmin === undefined) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) => rest.isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) => rest.isAuthenticated && rest.isAdmin ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// handle the public routes\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => !rest.isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/dashboard' }} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoute;","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport logo from \"./../assets/logo.png\";\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <footer className=\"mt-auto pt-5\">\r\n            <div className=\" pt-4 pb-4 bg-light shadow-lg\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"text-center\">\r\n                            <img\r\n                                src={logo}\r\n                                width=\"60%\"\r\n                                height=\"auto\"\r\n                                alt=\"STL Portal\"\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col className=\"border border-dark border-top-0 border-bottom-0 pb-2 mb-4\">\r\n                            <h5 className=\"text-dark px-2 py-0\">Quick Links</h5>\r\n                            <a\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"text-info px-2 py-1 d-block\"\r\n                                href=\"https://shop.savethislife.com\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Save This Life Shopify\r\n                            </a>\r\n                            <a\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"text-danger px-2 py-1 d-block\"\r\n                                href=\"https://shop.savethislife.com\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Asana Dashboard\r\n                            </a>\r\n                            <a\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"text-alert px-2 py-1 d-block\"\r\n                                href=\"https://shop.savethislife.com\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                TalkDesk\r\n                            </a>\r\n                            <a\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"text-success px-2 py-1 d-block\"\r\n                                href=\"https://shop.savethislife.com\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                CSR Portal\r\n                            </a>\r\n                            <a\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"text-primary px-2 py-1 d-block\"\r\n                                href=\"https://shop.savethislife.com\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Resources\r\n                            </a>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <h5 className=\"text-dark p-2\">Live Updates</h5>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <p className=\"text-center text-dark m-0\">\r\n                        © 2020 Save This Life Inc. All rights reserved.\r\n                    </p>\r\n                    <p className=\"text-center text-dark m-0\">\r\n                        Save This Life and Save This Life logo are registered\r\n                        trademarks of Save This Life, Inc.\r\n                    </p>\r\n                </Container>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { verifyTokenAsync } from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\n\r\nconst DashboardPage = () => {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    return <></>;\r\n};\r\n\r\nexport default DashboardPage;\r\n","import axios from \"axios\";\r\n\r\nexport const petGetListService = async (activePage) => {\r\n    try {\r\n        return await axios.get(\r\n            `${window.$server_url}/admin/pets/page/${activePage}`\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const petGetService = async (_id) => {\r\n    try {\r\n        return await axios.get(`${window.$server_url}/admin/pets/${_id}`);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const petRegisterService = async (pet) => {\r\n    try {\r\n        return await axios.post(`${window.$server_url}/admin/pets/add`, pet);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const petDeleteService = async (microchip) => {\r\n    try {\r\n        return await axios.delete(\r\n            `${window.$server_url}/admin/pets/delete/${microchip}`\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const petUpdateService = async (id, pet) => {\r\n    try {\r\n        return await axios.patch(\r\n            `${window.$server_url}/admin/pets/update/${id}`,\r\n            pet\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const petSearchService = async (req) => {\r\n    try {\r\n        return await axios.post(`${window.$server_url}/admin/pets/search`, req);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const ownerSearchService = async (req) => {\r\n    try {\r\n        return await axios.post(\r\n            `${window.$server_url}/admin/owners/search`,\r\n            req\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFormInput = initialValue => {\r\n    const [value, setValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        setValue(initialValue);\r\n    }, [initialValue, setValue])\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    return {\r\n        value: value,\r\n        onChange: handleChange\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFormCheck = initialValue => {\r\n    const [selected, setSelected] = useState('');\r\n\r\n    useEffect(() => {\r\n        setSelected(initialValue);\r\n    }, [initialValue, setSelected])\r\n\r\n    const handleChange = e => {\r\n        setSelected(e.target.value);\r\n    };\r\n\r\n    return {\r\n        selected,\r\n        onChange: handleChange\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport {\r\n    createUltimatePagination,\r\n    ITEM_TYPES,\r\n} from \"react-ultimate-pagination\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PaginationInternal = createUltimatePagination({\r\n    WrapperComponent: Pagination,\r\n    itemTypeToComponent: {\r\n        [ITEM_TYPES.PAGE]: ({ value, isActive }) => (\r\n            <Pagination.Item data-value={value} active={isActive}>\r\n                {value}\r\n            </Pagination.Item>\r\n        ),\r\n        [ITEM_TYPES.ELLIPSIS]: ({ value, isActive, onClick }) => (\r\n            <Pagination.Ellipsis data-value={value} onClick={onClick} />\r\n        ),\r\n        [ITEM_TYPES.FIRST_PAGE_LINK]: ({ isActive, onClick }) => (\r\n            <Pagination.First\r\n                data-value={1}\r\n                disabled={isActive}\r\n                onClick={onClick}\r\n            />\r\n        ),\r\n        [ITEM_TYPES.PREVIOUS_PAGE_LINK]: ({ value, isActive, onClick }) => (\r\n            <Pagination.Prev\r\n                data-value={value}\r\n                disabled={isActive}\r\n                onClick={onClick}\r\n            />\r\n        ),\r\n        [ITEM_TYPES.NEXT_PAGE_LINK]: ({ value, isActive, onClick }) => (\r\n            <Pagination.Next\r\n                data-value={value}\r\n                disabled={isActive}\r\n                onClick={onClick}\r\n            />\r\n        ),\r\n        [ITEM_TYPES.LAST_PAGE_LINK]: ({ value, isActive, onClick }) => (\r\n            <Pagination.Last\r\n                data-value={value}\r\n                disabled={isActive}\r\n                onClick={onClick}\r\n            />\r\n        ),\r\n    },\r\n});\r\n\r\nexport default class AppPagination extends Component {\r\n    static propTypes = {\r\n        currentPage: PropTypes.number.isRequired,\r\n        totalPages: PropTypes.number.isRequired,\r\n        onChange: PropTypes.func,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick(event) {\r\n        const a = event.target;\r\n\r\n        if (a.nodeName === \"SPAN\" || a.dataset.value !== undefined) {\r\n            const pageNumber = a.dataset.value\r\n                ? parseInt(a.dataset.value, 10)\r\n                : parseInt(a.parentNode.dataset.value, 10);\r\n\r\n            if (typeof this.props.onChange === \"function\") {\r\n                this.props.onChange(pageNumber);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { currentPage, totalPages } = this.props;\r\n\r\n        return (\r\n            <PaginationInternal\r\n                className=\"float-right mb-0 mt-2 border border-info shadow p-1\"\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onClick={this.onClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport { FaSearch, FaTrashAlt } from \"react-icons/fa\";\r\nimport { FcCancel } from \"react-icons/fc\";\r\nimport { MdErrorOutline } from \"react-icons/md\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport { petGetListService, petDeleteService } from \"./../services/pet.service\";\r\nimport { verifyTokenAsync } from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { petSearchService } from \"../services/search.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { useFormCheck } from \"../utils/form-check.util\";\r\nimport Pagination from \"../utils/pagination.util\";\r\nimport nophoto from \"../assets/nophoto.png\";\r\n\r\nexport default function PetList() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const [pets, setPets] = useState([]);\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [pageLoading, setPageLoading] = useState(true);\r\n\r\n    const searchCategory = useFormCheck(\"microchip\");\r\n    const searchValue = useFormInput(\"\");\r\n    const [hasResult, setHasResult] = useState(false);\r\n    const [hasSearchError, setHasSearchError] = useState(false);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const petList = await petGetListService(activePage);\r\n            if (!petList.error) {\r\n                setPets(petList.data.pets);\r\n                setTotalPages(parseInt(petList.data.count / 20));\r\n            }\r\n\r\n            setPageLoading(false);\r\n        }\r\n        if (!hasResult) {\r\n            setPageLoading(true);\r\n            fetchData();\r\n        }\r\n    }, [dispatch, activePage, hasResult]);\r\n\r\n    const handleSearch = (e) => {\r\n        if (e) e.preventDefault();\r\n\r\n        if (searchValue.value.trim() !== \"\") {\r\n            async function fetchData() {\r\n                setIsSearching(true);\r\n\r\n                const searchReq = {\r\n                    field: searchCategory.selected,\r\n                    value: searchValue.value.trim(),\r\n                };\r\n\r\n                const searchResult = await petSearchService(searchReq);\r\n                if (searchResult.error) {\r\n                    setHasSearchError(true);\r\n                    setHasResult(false);\r\n                } else {\r\n                    setHasSearchError(false);\r\n                    setHasResult(true);\r\n                    setPets(searchResult.data);\r\n                }\r\n\r\n                setIsSearching(false);\r\n            }\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n\r\n        setHasSearchError(false);\r\n        setHasResult(false);\r\n    };\r\n\r\n    const handleDelete = (_id) => {\r\n        async function fetchData() {\r\n            const result = await petDeleteService(_id);\r\n            if (result.error) {\r\n                console.log(result.errMsg);\r\n            } else {\r\n                async function fetchPetData() {\r\n                    const petList = await petGetListService(activePage);\r\n                    if (!petList.error) {\r\n                        if (hasResult) {\r\n                            handleSearch();\r\n                        } else {\r\n                            setPets(petList.data.pets);\r\n                            setTotalPages(parseInt(petList.data.count / 20));\r\n                        }\r\n                    }\r\n                }\r\n                fetchPetData();\r\n            }\r\n            setPageLoading(false);\r\n        }\r\n        setPageLoading(true);\r\n        fetchData();\r\n    };\r\n\r\n    const photoErrorHandle = (e) => {\r\n        e.preventDefault();\r\n        e.target.src = nophoto;\r\n    };\r\n\r\n    const pagination = () => {\r\n        async function handleNextPage(activePage) {\r\n            setActivePage(activePage);\r\n        }\r\n\r\n        return (\r\n            <Pagination\r\n                totalPages={totalPages}\r\n                currentPage={activePage}\r\n                onChange={handleNextPage}\r\n            />\r\n        );\r\n    };\r\n\r\n    const renderPhotoPopover = (pet) => {\r\n        return (\r\n            <Popover id={pet.microchip} className=\"shadow\">\r\n                <Popover.Title as=\"h2\" className=\"text-center\">\r\n                    {pet.microchip}\r\n                </Popover.Title>\r\n                <Popover.Content>\r\n                    <img\r\n                        src={pet.photoPath ? pet.photoPath : nophoto}\r\n                        width=\"100%\"\r\n                        height=\"auto\"\r\n                        alt={pet.microchip}\r\n                        onError={photoErrorHandle}\r\n                    />\r\n                </Popover.Content>\r\n            </Popover>\r\n        );\r\n    };\r\n\r\n    const Pet = (props) => (\r\n        <tr style={{ height: \"70px\" }}>\r\n            <td>\r\n                <Link to={\"/pets/edit/\" + props.pet._id}>\r\n                    {props.pet.microchip}\r\n                </Link>\r\n            </td>\r\n            <td className=\"text-uppercase\">{props.pet.membership}</td>\r\n            <td className=\"text-capitalize\">{props.pet.petName}</td>\r\n            <td className=\"text-lowercase\">\r\n                {props.pet.ownerId !== \"\" && (\r\n                    <Link to={\"/owners/edit/\" + props.pet.ownerId}>\r\n                        {props.pet.email}\r\n                    </Link>\r\n                )}\r\n                {props.pet.ownerId === \"\" && <>{props.pet.email}</>}\r\n            </td>\r\n            <td className=\"text-capitalize\">{props.pet.ownerName}</td>\r\n            <td>\r\n                {moment(new Date(props.pet.registered_at)).format(\r\n                    \"MMM DD, YYYY\"\r\n                )}\r\n            </td>\r\n            <td className=\"p-1\">\r\n                <OverlayTrigger\r\n                    placement=\"left\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderPhotoPopover(props.pet)}\r\n                >\r\n                    <img\r\n                        src={\r\n                            props.pet.photoPath ? props.pet.photoPath : nophoto\r\n                        }\r\n                        width=\"73\"\r\n                        height=\"73\"\r\n                        alt={props.pet.microchip}\r\n                        onError={photoErrorHandle}\r\n                    />\r\n                </OverlayTrigger>\r\n            </td>\r\n            <td className=\"text-center pt-3\">\r\n                <span\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => handleDelete(props.pet._id)}\r\n                >\r\n                    {\" \"}\r\n                    <FaTrashAlt className=\"text-danger mx-1\" />\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n\r\n    const petList = (pets) => {\r\n        if (pageLoading) {\r\n            return (\r\n                <tr>\r\n                    <td>\r\n                        <Container\r\n                            className=\"py-5 text-center\"\r\n                            style={{ position: \"absolute\" }}\r\n                        >\r\n                            <ClipLoader\r\n                                css=\"margin: auto;\"\r\n                                size={100}\r\n                                color={\"#ff0000\"}\r\n                                loading={pageLoading}\r\n                            />\r\n                        </Container>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return pets.map(function (pet, index) {\r\n                return <Pet pet={pet} key={index} />;\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">Registerd Pets</h1>\r\n\r\n                <Row className=\"mt-4\">\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Group as={Row}>\r\n                                <Col md=\"4\" className=\"pl-0 my-auto\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"text-capitalize\"\r\n                                        {...searchCategory}\r\n                                    >\r\n                                        <option value=\"microchip\">\r\n                                            Microchip\r\n                                        </option>\r\n                                        <option value=\"email\">\r\n                                            Owner Email\r\n                                        </option>\r\n                                        <option value=\"petName\">\r\n                                            Pet Name\r\n                                        </option>\r\n                                        <option value=\"ownerName\">\r\n                                            Owner Name\r\n                                        </option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n\r\n                                <Col md=\"5\" className=\"pl-0 my-auto\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        {...searchValue}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" className=\"pl-0\">\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"outline-info\"\r\n                                        className=\"float-left px-2\"\r\n                                        disabled={isSearching}\r\n                                        onClick={handleSearch}\r\n                                    >\r\n                                        <FaSearch className=\"text-danger mx-1\" />\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"outline-danger\"\r\n                                        className=\"float-left px-2\"\r\n                                        disabled={isSearching}\r\n                                        onClick={handleCancel}\r\n                                    >\r\n                                        <FcCancel className=\"text-info mx-1\" />\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col className=\"px-0\">\r\n                        {totalPages > 1 &&\r\n                            !hasResult &&\r\n                            !hasSearchError &&\r\n                            pagination()}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Table responsive>\r\n                        <thead className=\"bg-danger text-white\">\r\n                            <tr>\r\n                                <th style={{ width: \"14%\", maxWidth: \"14%\" }}>\r\n                                    Microchip\r\n                                </th>\r\n                                <th style={{ width: \"11%\", maxWidth: \"11%\" }}>\r\n                                    Membership\r\n                                </th>\r\n                                <th style={{ width: \"14%\", maxWidth: \"14%\" }}>\r\n                                    Pet Name\r\n                                </th>\r\n                                <th style={{ width: \"20%\", maxWidth: \"20%\" }}>\r\n                                    Owner Email\r\n                                </th>\r\n                                <th style={{ width: \"20%\", maxWidth: \"20%\" }}>\r\n                                    Owner Name\r\n                                </th>\r\n                                <th style={{ width: \"13%\", maxWidth: \"13%\" }}>\r\n                                    Registered At\r\n                                </th>\r\n                                <th style={{ width: \"4%\", maxWidth: \"4%\" }}>\r\n                                    Photo\r\n                                </th>\r\n                                <th style={{ width: \"4%\", maxWidth: \"4%\" }}>\r\n                                    Action\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        {!hasSearchError && <tbody>{petList(pets)}</tbody>}\r\n                    </Table>\r\n                </Row>\r\n\r\n                {hasSearchError && (\r\n                    <Row className=\"justify-content-md-center my-5\">\r\n                        <MdErrorOutline\r\n                            className=\"text-warning mr-1\"\r\n                            size={24}\r\n                        />\r\n                        No Pet Found\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const photoGetService = async (_id) => {\r\n    try {\r\n        return await axios.get(`${window.$server_url}/admin/photos/${_id}`, {\r\n            headers: {\r\n                \"content-type\": \"application/x-www-form-urlencoded\",\r\n                \"Access-Control-Max-Age\": 1728000,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const photoAddService = async (pet) => {\r\n    try {\r\n        return await axios.post(`${window.$server_url}/admin/photos/add`, pet);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport csc from \"country-state-city\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport {\r\n    verifyTokenAsync,\r\n    userLogoutAsync,\r\n} from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { useFormCheck } from \"../utils/form-check.util\";\r\nimport { petGetService, petUpdateService } from \"../services/pet.service\";\r\nimport { photoGetService, photoAddService } from \"../services/photo.service\";\r\n\r\nimport nophoto from \"../assets/nophoto.png\";\r\n\r\nexport default function PetRegister() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const { id } = useParams();\r\n    const [pet, setPet] = useState({\r\n        microchip: \"\",\r\n        petName: \"\",\r\n        petSpecies: \"\",\r\n        petBreed: \"\",\r\n        petColor: \"\",\r\n        petGender: \"male\",\r\n        petBirth: \"\",\r\n        specialNeeds: \"\",\r\n        vetInfo: \"\",\r\n        dateRV: \"\",\r\n        implantedCompany: \"\",\r\n        ownerName: \"\",\r\n        email: \"\",\r\n        ownerPhone1: \"\",\r\n        ownerPhone2: \"\",\r\n        ownerPhone3: \"\",\r\n        ownerPhone4: \"\",\r\n        ownerPhone5: \"\",\r\n        ownerPhone6: \"\",\r\n        ownerPhone7: \"\",\r\n        ownerAddress1: \"\",\r\n        ownerAddress2: \"\",\r\n        ownerCity: \"\",\r\n        ownerState: \"\",\r\n        ownerZip: \"\",\r\n        ownerCountry: \"US\",\r\n        ownerSecContact: \"\",\r\n        ownerNote: \"\",\r\n    });\r\n\r\n    const history = useHistory();\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    const microchip = useFormInput(pet.microchip);\r\n    const petName = useFormInput(pet.petName);\r\n    const petSpecies = useFormInput(pet.petSpecies);\r\n    const petBreed = useFormInput(pet.petBreed);\r\n    const petColor = useFormInput(pet.petColor);\r\n    const petGender = useFormCheck(pet.petGender);\r\n    const petBirth = useFormInput(pet.petBirth);\r\n    const specialNeeds = useFormInput(pet.specialNeeds);\r\n    const vetInfo = useFormInput(pet.vetInfo);\r\n    const dateRV = useFormInput(pet.dateRV);\r\n    const implantedCompany = useFormInput(pet.implantedCompany);\r\n    const email = useFormInput(pet.email);\r\n    const ownerName = useFormInput(pet.ownerName);\r\n    const ownerPhone1 = useFormInput(pet.ownerPhone1);\r\n    const ownerPhone2 = useFormInput(pet.ownerPhone2);\r\n    const ownerPhone3 = useFormInput(pet.ownerPhone3);\r\n    const ownerPhone4 = useFormInput(pet.ownerPhone4);\r\n    const ownerPhone5 = useFormInput(pet.ownerPhone5);\r\n    const ownerPhone6 = useFormInput(pet.ownerPhone6);\r\n    const ownerPhone7 = useFormInput(pet.ownerPhone7);\r\n    const ownerAddress1 = useFormInput(pet.ownerAddress1);\r\n    const ownerAddress2 = useFormInput(pet.ownerAddress2);\r\n    const ownerCity = useFormInput(pet.ownerCity);\r\n    const ownerState = useFormInput(pet.ownerState);\r\n    const ownerZip = useFormInput(pet.ownerZip);\r\n    const ownerCountry = useFormInput(pet.ownerCountry);\r\n    const ownerSecContact = useFormInput(pet.ownerSecContact);\r\n    const ownerNote = useFormInput(pet.ownerNote);\r\n\r\n    const [petPhoto, setpetPhoto] = useState(\"\");\r\n    const [petPhotoPath, setPetPhotoPath] = useState(\"\");\r\n    const [petPhotoPreview, setPetPhotoPreview] = useState(nophoto);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const petData = await petGetService(id);\r\n            if (petData.error) {\r\n                dispatch(userLogoutAsync());\r\n            } else {\r\n                setPet((pet) => ({ ...pet, ...petData.data }));\r\n            }\r\n\r\n            if (pet.microchip !== \"\") {\r\n                const photoData = await photoGetService(pet.microchip);\r\n                if (photoData.error) {\r\n                    dispatch(userLogoutAsync());\r\n                } else {\r\n                    setPetPhotoPreview(photoData.data);\r\n                }\r\n            }\r\n        }\r\n        getData();\r\n    }, [dispatch, id, setPet, pet.microchip]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const pet = {\r\n            microchip: microchip.value,\r\n            petName: petName.value,\r\n            petSpecies: petSpecies.value,\r\n            petBreed: petBreed.value,\r\n            petColor: petColor.value,\r\n            petGender: petGender.value,\r\n            petBirth: petBirth.value,\r\n            specialNeeds: specialNeeds.value,\r\n            vetInfo: vetInfo.value,\r\n            dateRV: dateRV.value,\r\n            implantedCompany: implantedCompany.value,\r\n            email: email.value,\r\n            ownerName: ownerName.value,\r\n            ownerPhone1: ownerPhone1.value,\r\n            ownerPhone2: ownerPhone2.value,\r\n            ownerPhone3: ownerPhone3.value,\r\n            ownerPhone4: ownerPhone4.value,\r\n            ownerPhone5: ownerPhone5.value,\r\n            ownerPhone6: ownerPhone6.value,\r\n            ownerPhone7: ownerPhone7.value,\r\n            ownerAddress1: ownerAddress1.value,\r\n            ownerAddress2: ownerAddress2.value,\r\n            ownerCity: ownerCity.value,\r\n            ownerState: ownerState.value,\r\n            ownerZip: ownerZip.value,\r\n            ownerCountry: ownerCountry.value,\r\n            ownerSecContact: ownerSecContact.value,\r\n            ownerNote: ownerNote.value,\r\n        };\r\n\r\n        async function fetchData() {\r\n            const result = await petUpdateService(id, {\r\n                ...pet,\r\n                ...{ photoPath: petPhotoPath },\r\n            });\r\n            if (result.error) {\r\n                setFormError(result.errMsg);\r\n            } else {\r\n                if (petPhoto !== \"\") {\r\n                    const photoData = new FormData();\r\n                    photoData.append(\"petMicrochip\", pet.microchip);\r\n                    photoData.append(\r\n                        \"petPhotoName\",\r\n                        pet.microchip +\r\n                            \".\" +\r\n                            petPhoto.name.split(\".\")[\r\n                                petPhoto.name.split(\".\").length - 1\r\n                            ]\r\n                    );\r\n                    photoData.append(\"petPhotoData\", petPhoto);\r\n\r\n                    const addPhoto = await photoAddService(photoData);\r\n                    if (addPhoto.error) {\r\n                        setFormError(result.errMsg);\r\n                    } else {\r\n                        history.goBack();\r\n                    }\r\n                } else {\r\n                    history.goBack();\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.goBack();\r\n    };\r\n\r\n    const photoErrorHandle = (e) => {\r\n        e.preventDefault();\r\n        e.target.src = nophoto;\r\n    };\r\n\r\n    const photoUpdate = (e) => {\r\n        e.preventDefault();\r\n\r\n        const photo = e.target.files[0];\r\n        if (photo) {\r\n            setpetPhoto(photo);\r\n            setPetPhotoPath(\r\n                \"/uploads/photo/\" +\r\n                    pet.microchip +\r\n                    \".\" +\r\n                    photo.name.split(\".\")[photo.name.split(\".\").length - 1]\r\n            );\r\n            setPetPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const CountryOptions = (props) => (\r\n        <option value={props.sortname}>{props.name}</option>\r\n    );\r\n\r\n    const listCountries = () => {\r\n        return csc.getAllCountries().map(function (country, index) {\r\n            return (\r\n                <CountryOptions\r\n                    name={country.name}\r\n                    sortname={country.sortname}\r\n                    key={index}\r\n                ></CountryOptions>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">Update Pet Information</h1>\r\n\r\n                <Form autoComplete=\"off\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card className=\"h-100 shadow\">\r\n                                    <Card.Header className=\"bg-danger text-white\">\r\n                                        <h5 className=\"m-0\">Pet Information</h5>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Microchip Number\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"microchip\"\r\n                                                name=\"microchip\"\r\n                                                type=\"text\"\r\n                                                {...microchip}\r\n                                                placeholder=\"Microchip Number\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"petName\"\r\n                                                name=\"petName\"\r\n                                                type=\"text\"\r\n                                                {...petName}\r\n                                                placeholder=\"Pet's Name\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Species</Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"petSpecies\"\r\n                                                name=\"petSpecies\"\r\n                                                {...petSpecies}\r\n                                            >\r\n                                                <option>Choose One</option>\r\n                                                <option>Dog</option>\r\n                                                <option>Cat</option>\r\n                                                <option>Bird</option>\r\n                                                <option>Ferret</option>\r\n                                                <option>Goat</option>\r\n                                                <option>Horse</option>\r\n                                                <option>Pig</option>\r\n                                                <option>Rabbit</option>\r\n                                                <option>Snake</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Breed</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"petBreed\"\r\n                                                name=\"petBreed\"\r\n                                                type=\"text\"\r\n                                                {...petBreed}\r\n                                                placeholder=\"Pet's Breed\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Color</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"petColor\"\r\n                                                name=\"petColor\"\r\n                                                type=\"text\"\r\n                                                {...petColor}\r\n                                                placeholder=\"Pet's Color\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <Col className=\"p-0\">\r\n                                                <Form.Check\r\n                                                    inline\r\n                                                    className=\"mr-5\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"petGender\"\r\n                                                    value=\"male\"\r\n                                                    label=\"Male\"\r\n                                                    checked={\r\n                                                        petGender.selected ===\r\n                                                        \"male\"\r\n                                                    }\r\n                                                    {...petGender}\r\n                                                />\r\n                                                <Form.Check\r\n                                                    inline\r\n                                                    className=\"mr-5\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"petGender\"\r\n                                                    value=\"female\"\r\n                                                    label=\"Female\"\r\n                                                    checked={\r\n                                                        petGender.selected ===\r\n                                                        \"female\"\r\n                                                    }\r\n                                                    {...petGender}\r\n                                                />\r\n                                                <Form.Check\r\n                                                    inline\r\n                                                    className=\"mr-5\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"petGender\"\r\n                                                    value=\"other\"\r\n                                                    label=\"Other\"\r\n                                                    checked={\r\n                                                        petGender.selected ===\r\n                                                        \"other\"\r\n                                                    }\r\n                                                    {...petGender}\r\n                                                />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Birthdate</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"date\"\r\n                                                name=\"petBirth\"\r\n                                                {...petBirth}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Any Special Needs or Medications\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                id=\"specialNeeds\"\r\n                                                name=\"specialNeeds\"\r\n                                                {...specialNeeds}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Veterinary Information\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                id=\"vetInfo\"\r\n                                                name=\"vetInfo\"\r\n                                                {...vetInfo}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Date of Rabies Vaccination\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"date\"\r\n                                                id=\"dateRV\"\r\n                                                name=\"dateRV\"\r\n                                                {...dateRV}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Veterinary Hospital or Clinic\r\n                                                where Microchip was registered.\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                id=\"implantedCompany\"\r\n                                                name=\"implantedCompany\"\r\n                                                placeholder=\"Veterinary Hospital or Clinic\"\r\n                                                {...implantedCompany}\r\n                                            />\r\n                                            <Form.Text className=\"text-muted\">\r\n                                                Please Type Full Name as it\r\n                                                appears. i.e. \"ZEPPY's Pet\r\n                                                Hospital\"\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Pet's Photo</Form.Label>\r\n                                            <Form.File custom>\r\n                                                <Form.File.Input\r\n                                                    name=\"petPhoto\"\r\n                                                    onChange={photoUpdate}\r\n                                                />\r\n                                                <Form.File.Label data-browse=\"Upload\">\r\n                                                    Max. 512mb. Type: .jpg /\r\n                                                    .jpeg / .png / .gif\r\n                                                </Form.File.Label>\r\n                                            </Form.File>\r\n                                        </Form.Group>\r\n\r\n                                        <Image\r\n                                            src={petPhotoPreview}\r\n                                            width=\"100%\"\r\n                                            height=\"auto\"\r\n                                            thumbnail\r\n                                            onError={photoErrorHandle}\r\n                                        />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Card className=\"h-100 shadow\">\r\n                                    <Card.Header className=\"bg-success text-white\">\r\n                                        <h5 className=\"m-0\">\r\n                                            Owner Information\r\n                                        </h5>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                                type=\"email\"\r\n                                                {...email}\r\n                                                placeholder=\"Pet Owner's Email Address\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerName\"\r\n                                                name=\"ownerName\"\r\n                                                type=\"text\"\r\n                                                {...ownerName}\r\n                                                placeholder=\"Pet Owner's Full Name\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Primary Phone\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone1\"\r\n                                                name=\"ownerPhone1\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone1}\r\n                                                placeholder=\"Owner's Primary Phone Number\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Secondary Phone\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone2\"\r\n                                                name=\"ownerPhone2\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone2}\r\n                                                placeholder=\"Owner's Secondary Phone Number\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Label>Address</Form.Label>\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerAddress1\"\r\n                                                name=\"ownerAddress1\"\r\n                                                type=\"text\"\r\n                                                {...ownerAddress1}\r\n                                                placeholder=\"1234 Main St\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerAddress2\"\r\n                                                name=\"ownerAddress2\"\r\n                                                type=\"text\"\r\n                                                {...ownerAddress2}\r\n                                                placeholder=\"Apartment, studio, or floor\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerCity\"\r\n                                                    name=\"ownerCity\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerCity}\r\n                                                    placeholder=\"City\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerState\"\r\n                                                    name=\"ownerState\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerState}\r\n                                                    placeholder=\"State\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerZip\"\r\n                                                    name=\"ownerZip\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerZip}\r\n                                                    placeholder=\"12345 (12345-6789)\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerCountry\"\r\n                                                    name=\"ownerCountry\"\r\n                                                    as=\"select\"\r\n                                                    {...ownerCountry}\r\n                                                >\r\n                                                    {listCountries(\r\n                                                        ownerCountry.value\r\n                                                    )}\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Secondary Contact\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerSecContact\"\r\n                                                name=\"ownerSecContact\"\r\n                                                type=\"text\"\r\n                                                {...ownerSecContact}\r\n                                                placeholder=\"Owner's Secondary Contact Information\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Additional Phones\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone3\"\r\n                                                name=\"ownerPhone3\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone3}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone4\"\r\n                                                name=\"ownerPhone4\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone4}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone5\"\r\n                                                name=\"ownerPhone5\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone5}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone6\"\r\n                                                name=\"ownerPhone6\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone6}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone7\"\r\n                                                name=\"ownerPhone7\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone7}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Special Note\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerNote\"\r\n                                                name=\"ownerNote\"\r\n                                                as=\"textarea\"\r\n                                                {...ownerNote}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Button\r\n                                    className=\"float-right mt-5\"\r\n                                    variant=\"outline-secondary\"\r\n                                    onClick={handleCancel}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    className=\"float-right mr-2 mt-5\"\r\n                                    variant=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Update Pet\r\n                                </Button>\r\n\r\n                                {formError && (\r\n                                    <Form.Text className=\"text-danger float-right mr-4\">\r\n                                        {formError}\r\n                                    </Form.Text>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport csc from \"country-state-city\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport { verifyTokenAsync } from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { useFormCheck } from \"../utils/form-check.util\";\r\nimport { petRegisterService } from \"../services/pet.service\";\r\nimport { photoAddService } from \"../services/photo.service\";\r\n\r\nimport nophoto from \"../assets/nophoto.png\";\r\n\r\nexport default function PetRegister() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const history = useHistory();\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    const microchip = useFormInput(\"\");\r\n    const petName = useFormInput(\"\");\r\n    const petSpecies = useFormInput(\"\");\r\n    const petBreed = useFormInput(\"\");\r\n    const petColor = useFormInput(\"\");\r\n    const petGender = useFormCheck(\"\");\r\n    const petBirth = useFormInput(\"\");\r\n    const specialNeeds = useFormInput(\"\");\r\n    const vetInfo = useFormInput(\"\");\r\n    const dateRV = useFormInput(\"\");\r\n    const implantedCompany = useFormInput(\"\");\r\n    const email = useFormInput(\"\");\r\n    const ownerName = useFormInput(\"\");\r\n    const ownerPhone1 = useFormInput(\"\");\r\n    const ownerPhone2 = useFormInput(\"\");\r\n    const ownerPhone3 = useFormInput(\"\");\r\n    const ownerPhone4 = useFormInput(\"\");\r\n    const ownerPhone5 = useFormInput(\"\");\r\n    const ownerPhone6 = useFormInput(\"\");\r\n    const ownerPhone7 = useFormInput(\"\");\r\n    const ownerAddress1 = useFormInput(\"\");\r\n    const ownerAddress2 = useFormInput(\"\");\r\n    const ownerCity = useFormInput(\"\");\r\n    const ownerState = useFormInput(\"\");\r\n    const ownerZip = useFormInput(\"\");\r\n    const ownerCountry = useFormInput(\"US\");\r\n    const ownerSecContact = useFormInput(\"\");\r\n    const ownerNote = useFormInput(\"\");\r\n\r\n    const [petPhoto, setpetPhoto] = useState(\"\");\r\n    const [petPhotoPath, setPetPhotoPath] = useState(\"\");\r\n    const [petPhotoPreview, setPetPhotoPreview] = useState(nophoto);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const pet = {\r\n            microchip: microchip.value,\r\n            petName: petName.value,\r\n            petSpecies: petSpecies.value,\r\n            petBreed: petBreed.value,\r\n            petColor: petColor.value,\r\n            petGender: petGender.value,\r\n            petBirth: petBirth.value,\r\n            specialNeeds: specialNeeds.value,\r\n            vetInfo: vetInfo.value,\r\n            dateRV: dateRV.value,\r\n            implantedCompany: implantedCompany.value,\r\n            email: email.value,\r\n            ownerName: ownerName.value,\r\n            ownerPhone1: ownerPhone1.value,\r\n            ownerPhone2: ownerPhone2.value,\r\n            ownerPhone3: ownerPhone3.value,\r\n            ownerPhone4: ownerPhone4.value,\r\n            ownerPhone5: ownerPhone5.value,\r\n            ownerPhone6: ownerPhone6.value,\r\n            ownerPhone7: ownerPhone7.value,\r\n            ownerAddress1: ownerAddress1.value,\r\n            ownerAddress2: ownerAddress2.value,\r\n            ownerCity: ownerCity.value,\r\n            ownerState: ownerState.value,\r\n            ownerZip: ownerZip.value,\r\n            ownerCountry: ownerCountry.value,\r\n            ownerSecContact: ownerSecContact.value,\r\n            ownerNote: ownerNote.value,\r\n        };\r\n\r\n        async function fetchData() {\r\n            const result = await petRegisterService({\r\n                ...pet,\r\n                ...{ photoPath: petPhotoPath },\r\n            });\r\n            if (result.error) {\r\n                setFormError(result.errMsg);\r\n            } else {\r\n                if (petPhoto !== \"\") {\r\n                    const photoData = new FormData();\r\n                    photoData.append(\"petMicrochip\", pet.microchip);\r\n                    photoData.append(\r\n                        \"petPhotoName\",\r\n                        pet.microchip +\r\n                            \".\" +\r\n                            petPhoto.name.split(\".\")[\r\n                                petPhoto.name.split(\".\").length - 1\r\n                            ]\r\n                    );\r\n                    photoData.append(\"petPhotoData\", petPhoto);\r\n\r\n                    const addPhoto = await photoAddService(photoData);\r\n                    if (addPhoto.error) {\r\n                        setFormError(result.errMsg);\r\n                    } else {\r\n                        history.goBack();\r\n                    }\r\n                } else {\r\n                    history.goBack();\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.goBack();\r\n    };\r\n\r\n    const photoErrorHandle = (e) => {\r\n        e.preventDefault();\r\n        e.target.src = nophoto;\r\n    };\r\n\r\n    const photoUpdate = (e) => {\r\n        e.preventDefault();\r\n\r\n        const photo = e.target.files[0];\r\n        if (e.target.files[0]) {\r\n            setpetPhoto(photo);\r\n            setPetPhotoPath(\r\n                \"/uploads/photo/\" +\r\n                    microchip +\r\n                    \".\" +\r\n                    photo.name.split(\".\")[photo.name.split(\".\").length - 1]\r\n            );\r\n            setPetPhotoPreview(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const CountryOptions = (props) => (\r\n        <option value={props.sortname}>{props.name}</option>\r\n    );\r\n\r\n    const listCountries = () => {\r\n        return csc.getAllCountries().map(function (country, index) {\r\n            return (\r\n                <CountryOptions\r\n                    name={country.name}\r\n                    sortname={country.sortname}\r\n                    key={index}\r\n                ></CountryOptions>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">Update Pet Information</h1>\r\n\r\n                <Form autoComplete=\"off\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card className=\"h-100 shadow\">\r\n                                    <Card.Header className=\"bg-danger text-white\">\r\n                                        <h5 className=\"m-0\">Pet Information</h5>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Microchip Number\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"microchip\"\r\n                                                name=\"microchip\"\r\n                                                type=\"text\"\r\n                                                {...microchip}\r\n                                                placeholder=\"Microchip Number\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"petName\"\r\n                                                name=\"petName\"\r\n                                                type=\"text\"\r\n                                                {...petName}\r\n                                                placeholder=\"Pet's Name\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Species</Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"petSpecies\"\r\n                                                name=\"petSpecies\"\r\n                                                {...petSpecies}\r\n                                            >\r\n                                                <option>Choose One</option>\r\n                                                <option>Dog</option>\r\n                                                <option>Cat</option>\r\n                                                <option>Bird</option>\r\n                                                <option>Ferret</option>\r\n                                                <option>Goat</option>\r\n                                                <option>Horse</option>\r\n                                                <option>Pig</option>\r\n                                                <option>Rabbit</option>\r\n                                                <option>Snake</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Breed</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"petBreed\"\r\n                                                name=\"petBreed\"\r\n                                                type=\"text\"\r\n                                                {...petBreed}\r\n                                                placeholder=\"Pet's Breed\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Color</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"petColor\"\r\n                                                name=\"petColor\"\r\n                                                type=\"text\"\r\n                                                {...petColor}\r\n                                                placeholder=\"Pet's Color\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <Col className=\"p-0\">\r\n                                                <Form.Check\r\n                                                    inline\r\n                                                    className=\"mr-5\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"petGender\"\r\n                                                    value=\"male\"\r\n                                                    label=\"Male\"\r\n                                                    checked={\r\n                                                        petGender.selected ===\r\n                                                        \"male\"\r\n                                                    }\r\n                                                    {...petGender}\r\n                                                />\r\n                                                <Form.Check\r\n                                                    inline\r\n                                                    className=\"mr-5\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"petGender\"\r\n                                                    value=\"female\"\r\n                                                    label=\"Female\"\r\n                                                    checked={\r\n                                                        petGender.selected ===\r\n                                                        \"female\"\r\n                                                    }\r\n                                                    {...petGender}\r\n                                                />\r\n                                                <Form.Check\r\n                                                    inline\r\n                                                    className=\"mr-5\"\r\n                                                    type=\"radio\"\r\n                                                    name=\"petGender\"\r\n                                                    value=\"other\"\r\n                                                    label=\"Other\"\r\n                                                    checked={\r\n                                                        petGender.selected ===\r\n                                                        \"other\"\r\n                                                    }\r\n                                                    {...petGender}\r\n                                                />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Birthdate</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"date\"\r\n                                                name=\"petBirth\"\r\n                                                {...petBirth}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Any Special Needs or Medications\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                id=\"specialNeeds\"\r\n                                                name=\"specialNeeds\"\r\n                                                {...specialNeeds}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Veterinary Information\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                id=\"vetInfo\"\r\n                                                name=\"vetInfo\"\r\n                                                {...vetInfo}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Date of Rabies Vaccination\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"date\"\r\n                                                id=\"dateRV\"\r\n                                                name=\"dateRV\"\r\n                                                {...dateRV}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Veterinary Hospital or Clinic\r\n                                                where Microchip was registered.\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                id=\"implantedCompany\"\r\n                                                name=\"implantedCompany\"\r\n                                                placeholder=\"Veterinary Hospital or Clinic\"\r\n                                                {...implantedCompany}\r\n                                            />\r\n                                            <Form.Text className=\"text-muted\">\r\n                                                Please Type Full Name as it\r\n                                                appears. i.e. \"ZEPPY's Pet\r\n                                                Hospital\"\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Pet's Photo</Form.Label>\r\n                                            <Form.File custom>\r\n                                                <Form.File.Input\r\n                                                    name=\"petPhoto\"\r\n                                                    onChange={photoUpdate}\r\n                                                />\r\n                                                <Form.File.Label data-browse=\"Upload\">\r\n                                                    Max. 512mb. Type: .jpg /\r\n                                                    .jpeg / .png / .gif\r\n                                                </Form.File.Label>\r\n                                            </Form.File>\r\n                                        </Form.Group>\r\n\r\n                                        <Image\r\n                                            src={petPhotoPreview}\r\n                                            width=\"100%\"\r\n                                            height=\"auto\"\r\n                                            thumbnail\r\n                                            onError={photoErrorHandle}\r\n                                        />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Card className=\"h-100 shadow\">\r\n                                    <Card.Header className=\"bg-success text-white\">\r\n                                        <h5 className=\"m-0\">\r\n                                            Owner Information\r\n                                        </h5>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                                type=\"email\"\r\n                                                {...email}\r\n                                                placeholder=\"Pet Owner's Email Address\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerName\"\r\n                                                name=\"ownerName\"\r\n                                                type=\"text\"\r\n                                                {...ownerName}\r\n                                                placeholder=\"Pet Owner's Full Name\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Primary Phone\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone1\"\r\n                                                name=\"ownerPhone1\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone1}\r\n                                                placeholder=\"Owner's Primary Phone Number\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Secondary Phone\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone2\"\r\n                                                name=\"ownerPhone2\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone2}\r\n                                                placeholder=\"Owner's Secondary Phone Number\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Label>Address</Form.Label>\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerAddress1\"\r\n                                                name=\"ownerAddress1\"\r\n                                                type=\"text\"\r\n                                                {...ownerAddress1}\r\n                                                placeholder=\"1234 Main St\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerAddress2\"\r\n                                                name=\"ownerAddress2\"\r\n                                                type=\"text\"\r\n                                                {...ownerAddress2}\r\n                                                placeholder=\"Apartment, studio, or floor\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerCity\"\r\n                                                    name=\"ownerCity\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerCity}\r\n                                                    placeholder=\"City\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerState\"\r\n                                                    name=\"ownerState\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerState}\r\n                                                    placeholder=\"State\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerZip\"\r\n                                                    name=\"ownerZip\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerZip}\r\n                                                    placeholder=\"12345 (12345-6789)\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerCountry\"\r\n                                                    name=\"ownerCountry\"\r\n                                                    as=\"select\"\r\n                                                    {...ownerCountry}\r\n                                                >\r\n                                                    {listCountries(\r\n                                                        ownerCountry.value\r\n                                                    )}\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Secondary Contact\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerSecContact\"\r\n                                                name=\"ownerSecContact\"\r\n                                                type=\"text\"\r\n                                                {...ownerSecContact}\r\n                                                placeholder=\"Owner's Secondary Contact Information\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Additional Phones\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone3\"\r\n                                                name=\"ownerPhone3\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone3}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone4\"\r\n                                                name=\"ownerPhone4\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone4}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone5\"\r\n                                                name=\"ownerPhone5\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone5}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone6\"\r\n                                                name=\"ownerPhone6\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone6}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                id=\"ownerPhone7\"\r\n                                                name=\"ownerPhone7\"\r\n                                                type=\"text\"\r\n                                                {...ownerPhone7}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Special Note\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                id=\"ownerNote\"\r\n                                                name=\"ownerNote\"\r\n                                                as=\"textarea\"\r\n                                                {...ownerNote}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Button\r\n                                    className=\"float-right mt-5\"\r\n                                    variant=\"outline-secondary\"\r\n                                    onClick={handleCancel}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    className=\"float-right mr-2 mt-5\"\r\n                                    variant=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Update Pet\r\n                                </Button>\r\n\r\n                                {formError && (\r\n                                    <Form.Text className=\"text-danger float-right mr-4\">\r\n                                        {formError}\r\n                                    </Form.Text>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const ownerGetListService = async (activePage) => {\r\n    try {\r\n        return await axios.get(\r\n            `${window.$server_url}/admin/owners/page/${activePage}`\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const ownerGetService = async (_id) => {\r\n    try {\r\n        return await axios.get(`${window.$server_url}/admin/owners/${_id}`);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const ownerRegisterService = async (owner) => {\r\n    try {\r\n        return await axios.post(\r\n            `${window.$server_url}/admin/owners/add`,\r\n            owner\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const ownerDeleteService = async (_id) => {\r\n    try {\r\n        return await axios.delete(\r\n            `${window.$server_url}/admin/owners/delete/${_id}`\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const ownerUpdateService = async (id, owner) => {\r\n    try {\r\n        return await axios.patch(\r\n            `${window.$server_url}/admin/owners/update/${id}`,\r\n            owner\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { FaSearch, FaTrashAlt } from \"react-icons/fa\";\r\nimport { FcCancel } from \"react-icons/fc\";\r\nimport { MdErrorOutline } from \"react-icons/md\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport {\r\n    ownerGetListService,\r\n    ownerDeleteService,\r\n} from \"./../services/owner.service\";\r\nimport { verifyTokenAsync } from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { ownerSearchService } from \"../services/search.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { useFormCheck } from \"../utils/form-check.util\";\r\nimport Pagination from \"../utils/pagination.util\";\r\n\r\nexport default function OwnerList() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const [owners, setOwners] = useState([]);\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [pageLoading, setPageLoading] = useState(true);\r\n\r\n    const searchCategory = useFormCheck(\"email\");\r\n    const searchValue = useFormInput(\"\");\r\n    const [hasResult, setHasResult] = useState(false);\r\n    const [hasSearchError, setHasSearchError] = useState(false);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const ownerList = await ownerGetListService(activePage);\r\n            if (!ownerList.error) {\r\n                setOwners(ownerList.data.owners);\r\n                setTotalPages(parseInt(ownerList.data.count / 20));\r\n            }\r\n\r\n            setPageLoading(false);\r\n        }\r\n        if (!hasResult) {\r\n            setPageLoading(true);\r\n            fetchData();\r\n        }\r\n    }, [dispatch, activePage, hasResult]);\r\n\r\n    const handleSearch = (e) => {\r\n        if (e) e.preventDefault();\r\n\r\n        if (searchValue.value.trim() !== \"\") {\r\n            async function fetchData() {\r\n                setIsSearching(true);\r\n\r\n                const searchReq = {\r\n                    field: searchCategory.selected,\r\n                    value: searchValue.value.trim(),\r\n                };\r\n\r\n                const searchResult = await ownerSearchService(searchReq);\r\n                if (searchResult.error) {\r\n                    setHasSearchError(true);\r\n                    setHasResult(false);\r\n                } else {\r\n                    setHasSearchError(false);\r\n                    setHasResult(true);\r\n                    setOwners(searchResult.data);\r\n                }\r\n\r\n                setIsSearching(false);\r\n            }\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n\r\n        setHasSearchError(false);\r\n        setHasResult(false);\r\n    };\r\n\r\n    const handleDelete = (_id) => {\r\n        async function fetchData() {\r\n            const result = await ownerDeleteService(_id);\r\n            if (result.error) {\r\n                console.log(result.errMsg);\r\n            } else {\r\n                async function fetchOwnerData() {\r\n                    const ownerList = await ownerGetListService(activePage);\r\n                    if (!ownerList.error) {\r\n                        if (hasResult) {\r\n                            handleSearch();\r\n                        } else {\r\n                            setOwners(ownerList.data.owners);\r\n                            setTotalPages(parseInt(ownerList.data.count / 20));\r\n                        }\r\n                    }\r\n                }\r\n                fetchOwnerData();\r\n            }\r\n            setPageLoading(false);\r\n        }\r\n        setPageLoading(true);\r\n        fetchData();\r\n    };\r\n\r\n    const pagination = () => {\r\n        async function handleNextPage(activePage) {\r\n            setActivePage(activePage);\r\n        }\r\n\r\n        return (\r\n            <Pagination\r\n                totalPages={totalPages}\r\n                currentPage={activePage}\r\n                onChange={handleNextPage}\r\n            />\r\n        );\r\n    };\r\n\r\n    const Owner = (props) => (\r\n        <tr>\r\n            <td>\r\n                <Link to={\"/owners/edit/\" + props.owner._id}>\r\n                    {props.owner.ownerName}\r\n                </Link>\r\n            </td>\r\n            <td className=\"text-lowercase\">{props.owner.email}</td>\r\n            <td>{props.owner.ownerPhone1}</td>\r\n            <td className=\"text-capitalize\">{props.owner.ownerCity}</td>\r\n            <td className=\"text-capitalize\">{props.owner.ownerState}</td>\r\n            <td>\r\n                {moment(new Date(props.owner.registered_at)).format(\r\n                    \"MMM DD, YYYY\"\r\n                )}\r\n            </td>\r\n            <td className=\"text-center\">\r\n                <span\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => handleDelete(props.owner._id)}\r\n                >\r\n                    {\" \"}\r\n                    <FaTrashAlt className=\"text-danger mx-1\" />\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n\r\n    const ownerList = (owners) => {\r\n        if (pageLoading) {\r\n            return (\r\n                <tr>\r\n                    <td>\r\n                        <Container\r\n                            className=\"my-5 py-5 text-center\"\r\n                            style={{ position: \"absolute\" }}\r\n                        >\r\n                            <ClipLoader\r\n                                css=\"margin: auto;\"\r\n                                size={100}\r\n                                color={\"#ff0000\"}\r\n                                loading={pageLoading}\r\n                            />\r\n                        </Container>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return owners.map(function (owner, index) {\r\n                return <Owner owner={owner} key={index} />;\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">Registerd Owners</h1>\r\n\r\n                <Row className=\"mt-4\">\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Group as={Row}>\r\n                                <Col md=\"4\" className=\"pl-0 my-auto\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"text-capitalize\"\r\n                                        {...searchCategory}\r\n                                    >\r\n                                        <option value=\"email\">Email</option>\r\n                                        <option value=\"ownerName\">\r\n                                            Owner Name\r\n                                        </option>\r\n                                        <option value=\"ownerState\">\r\n                                            Owner State\r\n                                        </option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n\r\n                                <Col md=\"5\" className=\"pl-0 my-auto\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        {...searchValue}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" className=\"pl-0\">\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"outline-info\"\r\n                                        className=\"float-left px-2\"\r\n                                        disabled={isSearching}\r\n                                        onClick={handleSearch}\r\n                                    >\r\n                                        <FaSearch className=\"text-danger mx-1\" />\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"outline-danger\"\r\n                                        className=\"float-left px-2\"\r\n                                        disabled={isSearching}\r\n                                        onClick={handleCancel}\r\n                                    >\r\n                                        <FcCancel className=\"text-info mx-1\" />\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col className=\"px-0\">\r\n                        {totalPages > 1 &&\r\n                            !hasResult &&\r\n                            !hasSearchError &&\r\n                            pagination()}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Table responsive>\r\n                        <thead className=\"bg-danger text-white\">\r\n                            <tr>\r\n                                <th style={{ width: \"20%\", maxWidth: \"20%\" }}>\r\n                                    Full Name\r\n                                </th>\r\n                                <th style={{ width: \"20%\", maxWidth: \"20%\" }}>\r\n                                    Email Address\r\n                                </th>\r\n                                <th style={{ width: \"14%\", maxWidth: \"14%\" }}>\r\n                                    Primary Phone\r\n                                </th>\r\n                                <th style={{ width: \"14%\", maxWidth: \"14%\" }}>\r\n                                    City\r\n                                </th>\r\n                                <th style={{ width: \"14%\", maxWidth: \"14%\" }}>\r\n                                    State\r\n                                </th>\r\n                                <th style={{ width: \"13%\", maxWidth: \"13%\" }}>\r\n                                    Registered At\r\n                                </th>\r\n                                <th style={{ width: \"5%\", maxWidth: \"5%\" }}>\r\n                                    Action\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        {!hasSearchError && <tbody>{ownerList(owners)}</tbody>}\r\n                    </Table>\r\n                </Row>\r\n\r\n                {hasSearchError && (\r\n                    <Row className=\"justify-content-md-center my-5\">\r\n                        <MdErrorOutline\r\n                            className=\"text-warning mr-1\"\r\n                            size={24}\r\n                        />\r\n                        No Owner Found\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport csc from \"country-state-city\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\n\r\nimport {\r\n    verifyTokenAsync,\r\n    userLogoutAsync,\r\n} from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { ownerGetService, ownerUpdateService } from \"../services/owner.service\";\r\n\r\nexport default function OwnerRegister() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const { id } = useParams();\r\n    const [owner, setOwner] = useState({\r\n        ownerName: \"\",\r\n        email: \"\",\r\n        ownerPhone1: \"\",\r\n        ownerPhone2: \"\",\r\n        ownerPhone3: \"\",\r\n        ownerPhone4: \"\",\r\n        ownerPhone5: \"\",\r\n        ownerPhone6: \"\",\r\n        ownerPhone7: \"\",\r\n        ownerAddress1: \"\",\r\n        ownerAddress2: \"\",\r\n        ownerCity: \"\",\r\n        ownerState: \"\",\r\n        ownerZip: \"\",\r\n        ownerCountry: \"US\",\r\n        ownerSecContact: \"\",\r\n        ownerNote: \"\",\r\n    });\r\n\r\n    const history = useHistory();\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    const ownerName = useFormInput(owner.ownerName);\r\n    const email = useFormInput(owner.email);\r\n    const ownerPhone1 = useFormInput(owner.ownerPhone1);\r\n    const ownerPhone2 = useFormInput(owner.ownerPhone2);\r\n    const ownerPhone3 = useFormInput(owner.ownerPhone3);\r\n    const ownerPhone4 = useFormInput(owner.ownerPhone4);\r\n    const ownerPhone5 = useFormInput(owner.ownerPhone5);\r\n    const ownerPhone6 = useFormInput(owner.ownerPhone6);\r\n    const ownerPhone7 = useFormInput(owner.ownerPhone7);\r\n    const ownerAddress1 = useFormInput(owner.ownerAddress1);\r\n    const ownerAddress2 = useFormInput(owner.ownerAddress2);\r\n    const ownerCity = useFormInput(owner.ownerCity);\r\n    const ownerState = useFormInput(owner.ownerState);\r\n    const ownerZip = useFormInput(owner.ownerZip);\r\n    const ownerCountry = useFormInput(owner.ownerCountry);\r\n    const ownerSecContact = useFormInput(owner.ownerSecContact);\r\n    const ownerNote = useFormInput(owner.ownerNote);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const result = await ownerGetService(id);\r\n            if (result.error) {\r\n                dispatch(userLogoutAsync());\r\n            } else {\r\n                setOwner(result.data);\r\n            }\r\n        }\r\n        getData();\r\n    }, [dispatch, id, setOwner]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        async function fetchData() {\r\n            const owner = {\r\n                email: email.value,\r\n                ownerName: ownerName.value,\r\n                ownerPhone1: ownerPhone1.value,\r\n                ownerPhone2: ownerPhone2.value,\r\n                ownerPhone3: ownerPhone3.value,\r\n                ownerPhone4: ownerPhone4.value,\r\n                ownerPhone5: ownerPhone5.value,\r\n                ownerPhone6: ownerPhone6.value,\r\n                ownerPhone7: ownerPhone7.value,\r\n                ownerAddress1: ownerAddress1.value,\r\n                ownerAddress2: ownerAddress2.value,\r\n                ownerCity: ownerCity.value,\r\n                ownerState: ownerState.value,\r\n                ownerZip: ownerZip.value,\r\n                ownerCountry: ownerCountry.value,\r\n                ownerSecContact: ownerSecContact.value,\r\n                ownerNote: ownerNote.value,\r\n            };\r\n            const result = await ownerUpdateService(id, owner);\r\n            if (result.error) {\r\n                setFormError(result.errMsg);\r\n            } else {\r\n                history.push(\"/owners\");\r\n            }\r\n        }\r\n        fetchData();\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.goBack();\r\n    };\r\n\r\n    const CountryOptions = (props) => (\r\n        <option value={props.sortname}>{props.name}</option>\r\n    );\r\n\r\n    const listCountries = () => {\r\n        return csc.getAllCountries().map(function (country, index) {\r\n            return (\r\n                <CountryOptions\r\n                    name={country.name}\r\n                    sortname={country.sortname}\r\n                    key={index}\r\n                ></CountryOptions>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">Update Owner Information</h1>\r\n\r\n                <Form autoComplete=\"off\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card className=\"h-100 shadow\">\r\n                                    <Card.Header className=\"bg-success text-white\">\r\n                                        <h5 className=\"m-0\">\r\n                                            Owner Information\r\n                                        </h5>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>Email</Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"email\"\r\n                                                    name=\"email\"\r\n                                                    type=\"email\"\r\n                                                    {...email}\r\n                                                    placeholder=\"Pet Owner's Email Address\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>Name</Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"ownerName\"\r\n                                                    name=\"ownerName\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerName}\r\n                                                    placeholder=\"Pet Owner's Full Name\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Primary Phone\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"ownerPhone1\"\r\n                                                    name=\"ownerPhone1\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerPhone1}\r\n                                                    placeholder=\"Owner's Primary Phone Number\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Secondary Phone\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"ownerPhone2\"\r\n                                                    name=\"ownerPhone2\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerPhone2}\r\n                                                    placeholder=\"Owner's Secondary Phone Number\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Label>Address</Form.Label>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerAddress1\"\r\n                                                    name=\"ownerAddress1\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerAddress1}\r\n                                                    placeholder=\"1234 Main St\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerAddress2\"\r\n                                                    name=\"ownerAddress2\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerAddress2}\r\n                                                    placeholder=\"Apartment, studio, or floor\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerCity\"\r\n                                                    name=\"ownerCity\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerCity}\r\n                                                    placeholder=\"City\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerState\"\r\n                                                    name=\"ownerState\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerState}\r\n                                                    placeholder=\"State\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerZip\"\r\n                                                    name=\"ownerZip\"\r\n                                                    type=\"text\"\r\n                                                    {...ownerZip}\r\n                                                    placeholder=\"12345 (12345-6789)\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"ownerCountry\"\r\n                                                    name=\"ownerCountry\"\r\n                                                    as=\"select\"\r\n                                                    {...ownerCountry}\r\n                                                >\r\n                                                    {listCountries(\r\n                                                        ownerCountry.value\r\n                                                    )}\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>\r\n                                                        Secondary Contact\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        id=\"ownerSecContact\"\r\n                                                        name=\"ownerSecContact\"\r\n                                                        type=\"text\"\r\n                                                        {...ownerSecContact}\r\n                                                        placeholder=\"Owner's Secondary Contact Information\"\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Label>\r\n                                                        Special Note\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        id=\"ownerNote\"\r\n                                                        name=\"ownerNote\"\r\n                                                        as=\"textarea\"\r\n                                                        {...ownerNote}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>\r\n                                                        Additional Phones\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        id=\"ownerPhone3\"\r\n                                                        name=\"ownerPhone3\"\r\n                                                        type=\"text\"\r\n                                                        {...ownerPhone3}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"ownerPhone4\"\r\n                                                        name=\"ownerPhone4\"\r\n                                                        type=\"text\"\r\n                                                        {...ownerPhone4}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"ownerPhone5\"\r\n                                                        name=\"ownerPhone5\"\r\n                                                        type=\"text\"\r\n                                                        {...ownerPhone5}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"ownerPhone6\"\r\n                                                        name=\"ownerPhone6\"\r\n                                                        type=\"text\"\r\n                                                        {...ownerPhone6}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"ownerPhone7\"\r\n                                                        name=\"ownerPhone7\"\r\n                                                        type=\"text\"\r\n                                                        {...ownerPhone7}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                        </Form.Row>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Button\r\n                                    className=\"float-right mt-5\"\r\n                                    variant=\"outline-secondary\"\r\n                                    onClick={handleCancel}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    className=\"float-right mr-2 mt-5\"\r\n                                    variant=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Update Owner\r\n                                </Button>\r\n\r\n                                {formError && (\r\n                                    <Form.Text className=\"text-danger float-right mr-4\">\r\n                                        {formError}\r\n                                    </Form.Text>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport csc from \"country-state-city\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\n\r\nimport { verifyTokenAsync } from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { ownerRegisterService } from \"../services/owner.service\";\r\n\r\nexport default function OwnerRegister() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const history = useHistory();\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    const name = useFormInput(\"\");\r\n    const email = useFormInput(\"\");\r\n    const phone1 = useFormInput(\"\");\r\n    const phone2 = useFormInput(\"\");\r\n    const phone3 = useFormInput(\"\");\r\n    const phone4 = useFormInput(\"\");\r\n    const phone5 = useFormInput(\"\");\r\n    const phone6 = useFormInput(\"\");\r\n    const phone7 = useFormInput(\"\");\r\n    const address1 = useFormInput(\"\");\r\n    const address2 = useFormInput(\"\");\r\n    const city = useFormInput(\"\");\r\n    const state = useFormInput(\"\");\r\n    const zip = useFormInput(\"\");\r\n    const country = useFormInput(\"US\");\r\n    const seccon = useFormInput(\"\");\r\n    const spenote = useFormInput(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        async function fetchData() {\r\n            const owner = {\r\n                email: email.value,\r\n                ownerName: name.value,\r\n                ownerPhone1: phone1.value,\r\n                ownerPhone2: phone2.value,\r\n                ownerPhone3: phone3.value,\r\n                ownerPhone4: phone4.value,\r\n                ownerPhone5: phone5.value,\r\n                ownerPhone6: phone6.value,\r\n                ownerPhone7: phone7.value,\r\n                ownerAddress1: address1.value,\r\n                ownerAddress2: address2.value,\r\n                ownerCity: city.value,\r\n                ownerState: state.value,\r\n                ownerZip: zip.value,\r\n                ownerCountry: country.value,\r\n                ownerSecContact: seccon.value,\r\n                ownerNote: spenote.value,\r\n            };\r\n            const result = await ownerRegisterService(owner);\r\n            if (result.error) {\r\n                setFormError(result.errMsg);\r\n            } else {\r\n                history.push(\"/owners\");\r\n            }\r\n        }\r\n        fetchData();\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/users\");\r\n    };\r\n\r\n    const CountryOptions = (props) => (\r\n        <option value={props.sortname}>{props.name}</option>\r\n    );\r\n\r\n    const listCountries = () => {\r\n        return csc.getAllCountries().map(function (country, index) {\r\n            return (\r\n                <CountryOptions\r\n                    name={country.name}\r\n                    sortname={country.sortname}\r\n                    key={index}\r\n                ></CountryOptions>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">Register A New Pet Owner</h1>\r\n\r\n                <Form autoComplete=\"off\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card className=\"h-100 shadow\">\r\n                                    <Card.Header className=\"bg-success text-white\">\r\n                                        <h5 className=\"m-0\">\r\n                                            Owner Information\r\n                                        </h5>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>Email</Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"email\"\r\n                                                    name=\"email\"\r\n                                                    type=\"email\"\r\n                                                    {...email}\r\n                                                    placeholder=\"Pet Owner's Email Address\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>Name</Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"name\"\r\n                                                    name=\"name\"\r\n                                                    type=\"text\"\r\n                                                    {...name}\r\n                                                    placeholder=\"Pet Owner's Full Name\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Primary Phone\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"phone1\"\r\n                                                    name=\"phone1\"\r\n                                                    type=\"text\"\r\n                                                    {...phone1}\r\n                                                    placeholder=\"Owner's Primary Phone Number\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Secondary Phone\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    id=\"phone2\"\r\n                                                    name=\"phone2\"\r\n                                                    type=\"text\"\r\n                                                    {...phone2}\r\n                                                    placeholder=\"Owner's Secondary Phone Number\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Label>Address</Form.Label>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"address1\"\r\n                                                    name=\"address1\"\r\n                                                    type=\"text\"\r\n                                                    {...address1}\r\n                                                    placeholder=\"1234 Main St\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"address2\"\r\n                                                    name=\"address2\"\r\n                                                    type=\"text\"\r\n                                                    {...address2}\r\n                                                    placeholder=\"Apartment, studio, or floor\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"city\"\r\n                                                    name=\"city\"\r\n                                                    type=\"text\"\r\n                                                    {...city}\r\n                                                    placeholder=\"City\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"state\"\r\n                                                    name=\"state\"\r\n                                                    type=\"text\"\r\n                                                    {...state}\r\n                                                    placeholder=\"State\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"zip\"\r\n                                                    name=\"zip\"\r\n                                                    type=\"text\"\r\n                                                    {...zip}\r\n                                                    placeholder=\"12345 (12345-6789)\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control\r\n                                                    id=\"country\"\r\n                                                    name=\"country\"\r\n                                                    as=\"select\"\r\n                                                    {...country}\r\n                                                >\r\n                                                    {listCountries(\r\n                                                        country.value\r\n                                                    )}\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>\r\n                                                        Secondary Contact\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        id=\"seccon\"\r\n                                                        name=\"seccon\"\r\n                                                        type=\"text\"\r\n                                                        {...seccon}\r\n                                                        placeholder=\"Owner's Secondary Contact Information\"\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Label>\r\n                                                        Special Note\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        id=\"spenote\"\r\n                                                        name=\"spenote\"\r\n                                                        as=\"textarea\"\r\n                                                        {...spenote}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>\r\n                                                        Additional Phones\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        id=\"phone3\"\r\n                                                        name=\"phone3\"\r\n                                                        type=\"text\"\r\n                                                        {...phone3}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"phone4\"\r\n                                                        name=\"phone4\"\r\n                                                        type=\"text\"\r\n                                                        {...phone4}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"phone5\"\r\n                                                        name=\"phone5\"\r\n                                                        type=\"text\"\r\n                                                        {...phone5}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"phone6\"\r\n                                                        name=\"phone6\"\r\n                                                        type=\"text\"\r\n                                                        {...phone6}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group>\r\n                                                    <Form.Control\r\n                                                        id=\"phone7\"\r\n                                                        name=\"phone7\"\r\n                                                        type=\"text\"\r\n                                                        {...phone7}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                        </Form.Row>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Button\r\n                                    className=\"float-right mt-5\"\r\n                                    variant=\"outline-secondary\"\r\n                                    onClick={handleCancel}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    className=\"float-right mr-2 mt-5\"\r\n                                    variant=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Register Owner\r\n                                </Button>\r\n\r\n                                {formError && (\r\n                                    <Form.Text className=\"text-danger float-right mr-4\">\r\n                                        {formError}\r\n                                    </Form.Text>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const userGetListService = async () => {\r\n    try {\r\n        return await axios.get(`${window.$server_url}/admin/users`);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const userGetService = async (_id) => {\r\n    try {\r\n        return await axios.get(`${window.$server_url}/admin/users/${_id}`);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const userRegisterService = async (user) => {\r\n    try {\r\n        return await axios.post(`${window.$server_url}/admin/users/add`, user);\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const userDeleteService = async (_id) => {\r\n    try {\r\n        return await axios.delete(\r\n            `${window.$server_url}/admin/users/delete/${_id}`\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n\r\nexport const userUpdateService = async (id, user) => {\r\n    try {\r\n        return await axios.patch(\r\n            `${window.$server_url}/admin/users/edit/${id}`,\r\n            user\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            errMsg: err.message,\r\n        };\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport { userGetListService } from \"./../services/user.service\";\r\nimport {\r\n    verifyTokenAsync,\r\n    userLogoutAsync,\r\n} from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { userDeleteService } from \"../services/user.service\";\r\n\r\nimport { MdPhoneForwarded } from \"react-icons/md\";\r\nimport { FaEnvelopeOpenText } from \"react-icons/fa\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nexport default function UserList() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const { userId } = auth_obj.user;\r\n    const { username } = auth_obj.user;\r\n    const [users, setUsers] = useState([]);\r\n    const [deleteError, setDeleteError] = useState(\"\");\r\n    const [pageLoading, setPageLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await userGetListService();\r\n            if (result.error) {\r\n                dispatch(userLogoutAsync());\r\n            } else {\r\n                setUsers(result.data);\r\n            }\r\n            setPageLoading(false);\r\n        }\r\n        setPageLoading(true);\r\n        fetchData();\r\n    }, [dispatch]);\r\n\r\n    const handleDelete = (_id) => {\r\n        async function fetchData() {\r\n            const result = await userDeleteService(_id);\r\n            if (result.error) {\r\n                setDeleteError(result.errMsg);\r\n                setTimeout(() => {\r\n                    setDeleteError(\"\");\r\n                }, 3000);\r\n            } else {\r\n                setUsers(result.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    };\r\n\r\n    const User = (props) => (\r\n        <tr>\r\n            <td>\r\n                <Link to={\"/users/edit/\" + props.user._id}>\r\n                    {props.user.name}\r\n                </Link>\r\n            </td>\r\n            <td>{props.user.email}</td>\r\n            <td>{props.user.phone}</td>\r\n            <td>{props.user.role}</td>\r\n            <td>\r\n                {username !== props.user.email && (\r\n                    <>\r\n                        <a href={\"tel:\" + props.user.phone}>\r\n                            <MdPhoneForwarded className=\"text-info mx-1\" />\r\n                        </a>{\" \"}\r\n                        <a href={\"mailto:\" + props.user.email}>\r\n                            <FaEnvelopeOpenText className=\"text-primary mx-1\" />\r\n                        </a>\r\n                    </>\r\n                )}\r\n                {!props.user.isAdmin && (\r\n                    <>\r\n                        <span onClick={() => handleDelete(props.user._id)}>\r\n                            {\" \"}\r\n                            <FaTrashAlt\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"text-danger mx-1\"\r\n                            />\r\n                        </span>\r\n                    </>\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n\r\n    const userList = (users) => {\r\n        if (pageLoading) {\r\n            return (\r\n                <tr>\r\n                    <td>\r\n                        <Container\r\n                            className=\"py-5 text-center\"\r\n                            style={{ position: \"absolute\" }}\r\n                        >\r\n                            <ClipLoader\r\n                                css=\"margin: auto;\"\r\n                                size={100}\r\n                                color={\"#ff0000\"}\r\n                                loading={pageLoading}\r\n                            />\r\n                        </Container>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return users.map(function (user, index) {\r\n                if (user._id === userId) return null;\r\n                const replace_obj = {};\r\n\r\n                switch (user.role) {\r\n                    case \"admin\":\r\n                        replace_obj.role = \"STL Admin\";\r\n                        break;\r\n                    case \"rep\":\r\n                        replace_obj.role = \"STL Rep\";\r\n                        break;\r\n                    default:\r\n                        replace_obj.role = \"Vet Practice\";\r\n                        break;\r\n                }\r\n\r\n                return <User user={{ ...user, ...replace_obj }} key={index} />;\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">All Portal Users</h1>\r\n\r\n                <Row>\r\n                    <Table responsive>\r\n                        <thead className=\"bg-success text-white\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Phone</th>\r\n                                <th>Role</th>\r\n                                <th>Manage</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>{userList(users)}</tbody>\r\n                    </Table>\r\n                </Row>\r\n\r\n                {deleteError !== \"\" && (\r\n                    <p className=\"float-right text-danger mx-4\">\r\n                        {deleteError}\r\n                    </p>\r\n                )}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport { verifyTokenAsync } from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { useFormCheck } from \"../utils/form-check.util\";\r\nimport { userRegisterService } from \"../services/user.service\";\r\n\r\nimport img from \"../assets/images/user-register.jpg\";\r\n\r\nexport default function UserRegister() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const role = useFormCheck(\"vet\");\r\n    const name = useFormInput(\"\");\r\n    const email = useFormInput(\"\");\r\n    const phone = useFormInput(\"\");\r\n    const password = useFormInput(\"\");\r\n    const password_confirm = useFormInput(\"\");\r\n\r\n    const history = useHistory();\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.value === password_confirm.value) {\r\n            async function fetchData() {\r\n                const newUser = {\r\n                    role: role.selected,\r\n                    email: email.value,\r\n                    phone: phone.value,\r\n                    name: name.value,\r\n                    password: password.value,\r\n                };\r\n                newUser.isAdmin = newUser.role === \"admin\" ? true : false;\r\n                const result = await userRegisterService(newUser);\r\n                if (result.error) {\r\n                    setFormError(result.errMsg);\r\n                } else {\r\n                    history.push(\"/users\");\r\n                }\r\n            }\r\n            fetchData();\r\n        } else {\r\n            setFormError(\"Password do not match\");\r\n        }\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/users\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">Add A New Portal User</h1>\r\n\r\n                <Form autoComplete=\"off\">\r\n                    <Row>\r\n                        <Col className=\"align-self-center\">\r\n                            <Image src={img} roundedCircle width=\"90%\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card className=\"shadow\">\r\n                                <Card.Header className=\"bg-success text-white\">\r\n                                    <h5 className=\"m-0\">User Information</h5>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Role</Form.Label>\r\n                                        <Col className=\"p-0\">\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"admin\"\r\n                                                label=\"STL Admin\"\r\n                                                checked={\r\n                                                    role.selected === \"admin\"\r\n                                                }\r\n                                                {...role}\r\n                                            />\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"rep\"\r\n                                                checked={\r\n                                                    role.selected === \"rep\"\r\n                                                }\r\n                                                label=\"STL Representation\"\r\n                                                {...role}\r\n                                            />\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"vet\"\r\n                                                label=\"Vet Practice\"\r\n                                                checked={\r\n                                                    role.selected === \"vet\"\r\n                                                }\r\n                                                {...role}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            id=\"userName\"\r\n                                            type=\"text\"\r\n                                            {...name}\r\n                                            placeholder=\"Enter Full Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control\r\n                                            id=\"userEmail\"\r\n                                            type=\"email\"\r\n                                            {...email}\r\n                                            placeholder=\"Enter Email Address\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Phone</Form.Label>\r\n                                        <Form.Control\r\n                                            id=\"userPhone\"\r\n                                            type=\"text\"\r\n                                            {...phone}\r\n                                            placeholder=\"Enter Phone Number\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control\r\n                                            id=\"userPass\"\r\n                                            type=\"password\"\r\n                                            {...password}\r\n                                            placeholder=\"Enter Password\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>\r\n                                            Confirm Password\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            id=\"userPassConfirm\"\r\n                                            type=\"password\"\r\n                                            {...password_confirm}\r\n                                            placeholder=\"Enter Password Again\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Button\r\n                                className=\"float-right mt-5\"\r\n                                variant=\"outline-secondary\"\r\n                                onClick={handleCancel}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                className=\"float-right mr-2 mt-5\"\r\n                                variant=\"primary\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Add User\r\n                            </Button>\r\n\r\n                            {formError && (\r\n                                <Form.Text className=\"text-danger float-right mr-4\">\r\n                                    {formError}\r\n                                </Form.Text>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport {\r\n    verifyTokenAsync,\r\n    userLogoutAsync,\r\n} from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { useFormCheck } from \"../utils/form-check.util\";\r\nimport { userGetService, userUpdateService } from \"../services/user.service\";\r\n\r\nimport img from \"../assets/images/user-register.jpg\";\r\n\r\nexport default function UserEdit() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const { id } = useParams();\r\n    const { userId } = auth_obj.user;\r\n    const history = useHistory();\r\n    const [formError, setFormError] = useState(\"\");\r\n    const [user, setUser] = useState({\r\n        role: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n    });\r\n\r\n    const role = useFormCheck(user.role);\r\n    const name = useFormInput(user.name);\r\n    const email = useFormInput(user.email);\r\n    const phone = useFormInput(user.phone);\r\n    const pass = useFormInput(\"\");\r\n    const pass_confirm = useFormInput(\"\");\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const result = await userGetService(id);\r\n            if (result.error) {\r\n                dispatch(userLogoutAsync());\r\n            } else {\r\n                setUser(result.data);\r\n            }\r\n        }\r\n        getData();\r\n    }, [dispatch, id, setUser]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        async function fetchData() {\r\n            let updateUser = {};\r\n            if (pass.value !== pass_confirm.value) {\r\n                setFormError(\"Re-enter the passwords!\");\r\n            } else {\r\n                if (id === userId) {\r\n                    updateUser = {\r\n                        role: user.role,\r\n                        email: email.value,\r\n                        phone: phone.value,\r\n                        name: name.value,\r\n                        password: pass.value,\r\n                    };\r\n                } else {\r\n                    updateUser = {\r\n                        role: role.selected,\r\n                        email: email.value,\r\n                        phone: phone.value,\r\n                        name: name.value,\r\n                        password: pass.value,\r\n                    };\r\n                }\r\n            }\r\n\r\n            updateUser.isAdmin = updateUser.role === \"admin\" ? true : false;\r\n            const result = await userUpdateService(id, updateUser);\r\n            if (result.error) {\r\n                setFormError(result.errMsg);\r\n            } else {\r\n                history.push(\"/users\");\r\n            }\r\n        }\r\n        fetchData();\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/users\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                {userId === id && (\r\n                    <h1 className=\"m-5 text-center\">My Profile</h1>\r\n                )}\r\n                {userId !== id && (\r\n                    <h1 className=\"m-5 text-center\">Edit User</h1>\r\n                )}\r\n\r\n                <Form autoComplete=\"off\">\r\n                    <Row>\r\n                        <Col className=\"align-self-center\">\r\n                            <Image src={img} roundedCircle width=\"90%\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card className=\"shadow\">\r\n                                <Card.Header className=\"bg-success text-white\">\r\n                                    <h5 className=\"m-0\">User Information</h5>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Role</Form.Label>\r\n                                        <Col className=\"p-0\">\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"admin\"\r\n                                                label=\"STL Admin\"\r\n                                                checked={\r\n                                                    role.selected === \"admin\"\r\n                                                }\r\n                                                {...role}\r\n                                                disabled={userId === id}\r\n                                            />\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"rep\"\r\n                                                checked={\r\n                                                    role.selected === \"rep\"\r\n                                                }\r\n                                                label=\"STL Representation\"\r\n                                                {...role}\r\n                                                disabled={userId === id}\r\n                                            />\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"vet\"\r\n                                                label=\"Vet Practice\"\r\n                                                checked={\r\n                                                    role.selected === \"vet\"\r\n                                                }\r\n                                                {...role}\r\n                                                disabled={userId === id}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            {...name}\r\n                                            placeholder=\"Enter Full Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            {...email}\r\n                                            placeholder=\"Enter Email Address\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Phone</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            {...phone}\r\n                                            placeholder=\"Enter Phone Number\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    {id === userId && (\r\n                                        <>\r\n                                            <Form.Group>\r\n                                                <Form.Label>\r\n                                                    Password\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"password\"\r\n                                                    {...pass}\r\n                                                    placeholder=\"Enter Password\"\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group>\r\n                                                <Form.Label>\r\n                                                    Confirm Password\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"password\"\r\n                                                    {...pass_confirm}\r\n                                                    placeholder=\"Enter Password Again\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Button\r\n                                className=\"float-right mt-5\"\r\n                                variant=\"outline-secondary\"\r\n                                onClick={handleCancel}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                className=\"float-right mr-2 mt-5\"\r\n                                variant=\"primary\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n\r\n                            {formError && (\r\n                                <Form.Text className=\"text-danger float-right mr-4\">\r\n                                    {formError}\r\n                                </Form.Text>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport {\r\n    verifyTokenAsync,\r\n    userLogoutAsync,\r\n} from \"../actions/auth-async.action\";\r\nimport { setAuthToken } from \"../services/auth.service\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\nimport { useFormCheck } from \"../utils/form-check.util\";\r\nimport { userGetService, userUpdateService } from \"../services/user.service\";\r\n\r\nimport img from \"../assets/images/user-register.jpg\";\r\n\r\nexport default function UserEdit() {\r\n    /*\r\n     * Private Page Token Verification Module.\r\n     */\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const { token, expiredAt } = auth_obj;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setAuthToken(token);\r\n        const verifyTokenTimer = setTimeout(() => {\r\n            dispatch(verifyTokenAsync(true));\r\n        }, moment(expiredAt).diff() - 10 * 1000);\r\n        return () => {\r\n            clearTimeout(verifyTokenTimer);\r\n        };\r\n    }, [expiredAt, token, dispatch]);\r\n    /* ----------------------- */\r\n\r\n    const { userId } = auth_obj.user;\r\n    const history = useHistory();\r\n    const [formError, setFormError] = useState(\"\");\r\n    const [user, setUser] = useState({\r\n        role: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n    });\r\n\r\n    const role = useFormCheck(user.role);\r\n    const name = useFormInput(user.name);\r\n    const email = useFormInput(user.email);\r\n    const phone = useFormInput(user.phone);\r\n    const pass = useFormInput(\"\");\r\n    const pass_confirm = useFormInput(\"\");\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const result = await userGetService(userId);\r\n            if (result.error) {\r\n                dispatch(userLogoutAsync());\r\n            } else {\r\n                setUser(result.data);\r\n            }\r\n        }\r\n        getData();\r\n    }, [dispatch, userId, setUser]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        async function fetchData() {\r\n            let updateUser = {};\r\n            if (pass.value !== pass_confirm.value) {\r\n                setFormError(\"Re-enter the passwords!\");\r\n            } else {\r\n                updateUser = {\r\n                    role: user.role,\r\n                    email: email.value,\r\n                    phone: phone.value,\r\n                    name: name.value,\r\n                    password: pass.value,\r\n                };\r\n            }\r\n\r\n            updateUser.isAdmin = updateUser.role === \"admin\" ? true : false;\r\n            const result = await userUpdateService(userId, updateUser);\r\n            if (result.error) {\r\n                setFormError(result.errMsg);\r\n            } else {\r\n                history.push(\"/users\");\r\n            }\r\n        }\r\n        fetchData();\r\n    };\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/users\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1 className=\"m-5 text-center\">My Profile</h1>\r\n\r\n                <Form autoComplete=\"off\">\r\n                    <Row>\r\n                        <Col className=\"align-self-center\">\r\n                            <Image src={img} roundedCircle width=\"90%\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Card className=\"shadow\">\r\n                                <Card.Header className=\"bg-success text-white\">\r\n                                    <h5 className=\"m-0\">User Information</h5>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Role</Form.Label>\r\n                                        <Col className=\"p-0\">\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"admin\"\r\n                                                label=\"STL Admin\"\r\n                                                checked={\r\n                                                    role.selected === \"admin\"\r\n                                                }\r\n                                                {...role}\r\n                                                disabled={true}\r\n                                            />\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"rep\"\r\n                                                checked={\r\n                                                    role.selected === \"rep\"\r\n                                                }\r\n                                                label=\"STL Representation\"\r\n                                                {...role}\r\n                                                disabled={true}\r\n                                            />\r\n                                            <Form.Check\r\n                                                inline\r\n                                                className=\"mr-5\"\r\n                                                type=\"radio\"\r\n                                                name=\"role\"\r\n                                                value=\"vet\"\r\n                                                label=\"Vet Practice\"\r\n                                                checked={\r\n                                                    role.selected === \"vet\"\r\n                                                }\r\n                                                {...role}\r\n                                                disabled={true}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            {...name}\r\n                                            placeholder=\"Enter Full Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            {...email}\r\n                                            placeholder=\"Enter Email Address\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Phone</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            {...phone}\r\n                                            placeholder=\"Enter Phone Number\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            {...pass}\r\n                                            placeholder=\"Enter Password\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>\r\n                                            Confirm Password\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            {...pass_confirm}\r\n                                            placeholder=\"Enter Password Again\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Button\r\n                                className=\"float-right mt-5\"\r\n                                variant=\"outline-secondary\"\r\n                                onClick={handleCancel}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                className=\"float-right mr-2 mt-5\"\r\n                                variant=\"primary\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n\r\n                            {formError && (\r\n                                <Form.Text className=\"text-danger float-right mr-4\">\r\n                                    {formError}\r\n                                </Form.Text>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Report() {\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Container, Row, Col, Button, Form, Card } from \"react-bootstrap\";\r\nimport logo from \"./../assets/logo.png\";\r\n\r\nimport { userLoginAsync } from \"../actions/auth-async.action\";\r\nimport { useFormInput } from \"../utils/form-input.util\";\r\n\r\nexport default function AccountLogin() {\r\n    const auth_obj = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const { loginLoading, loginError } = auth_obj;\r\n\r\n    const email = useFormInput(\"\");\r\n    const password = useFormInput(\"\");\r\n\r\n    const handleLogin = () => {\r\n        if (email.value !== \"\" && password.value !== \"\")\r\n            dispatch(userLoginAsync(email.value, password.value));\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center min-vh-100\">\r\n                <Card className=\"shadow w-50 my-auto\">\r\n                    <Card.Header className=\"bg-danger text-white\">\r\n                        <h3 className=\"m-0 text-center\">\r\n                            Save This Life Admin Portal\r\n                        </h3>\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col className=\"my-auto\">\r\n                                <Card.Img\r\n                                    variant=\"left\"\r\n                                    className=\"w-100\"\r\n                                    src={logo}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Card.Title>Login Information</Card.Title>\r\n                                <Card.Text>\r\n                                    Please request Heather the login credentials\r\n                                    if you are a identified Vet Practice.\r\n                                </Card.Text>\r\n                                <Form>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Email address</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            {...email}\r\n                                            placeholder=\"Enter email\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            {...password}\r\n                                            placeholder=\"Enter Password\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"outline-info\"\r\n                                        onClick={handleLogin}\r\n                                        disabled={loginLoading}\r\n                                    >\r\n                                        {loginLoading ? \"Loading...\" : \"Login\"}\r\n                                    </Button>\r\n                                    {loginError && (\r\n                                        <Form.Text className=\"text-danger\">\r\n                                            {loginError}\r\n                                        </Form.Text>\r\n                                    )}\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"../utils/header.util\";\r\nimport PrivateRoute from \"../routes/private.route\";\r\nimport PublicRoute from \"../routes/public.route\";\r\nimport Footer from \"../utils/footer.util\";\r\nimport Dashboard from \"../pages/dashboard.page\";\r\nimport PetList from \"../pages/pet-list.page\";\r\nimport PetEdit from \"../pages/pet-edit.page\";\r\nimport PetRegister from \"../pages/pet-register.page\";\r\nimport OwnerList from \"../pages/owner-list.page\";\r\nimport OwnerEdit from \"../pages/owner-edit.page\";\r\nimport OwnerRegister from \"../pages/owner-register.page\";\r\nimport UserList from \"../pages/user-list.page\";\r\nimport UserRegister from \"../pages/user-register.page\";\r\nimport UserEdit from \"../pages/user-edit.page\";\r\nimport Setting from \"../pages/setting.page\";\r\nimport Report from \"../pages/report.page\";\r\nimport AccountLogin from \"../pages/login.page\";\r\n\r\nexport default function STLRouter() {\r\n    const auth_obj = useSelector((state) => state.auth);\r\n\r\n    const { isAuthenticated } = auth_obj;\r\n    const { isAdmin } = auth_obj.user !== null ? auth_obj.user : false;\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                {isAuthenticated && <Header />}\r\n\r\n                <main>\r\n                    <Switch>\r\n                        <PrivateRoute\r\n                            path=\"/\"\r\n                            exact\r\n                            component={Dashboard}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            path=\"/pets\"\r\n                            exact\r\n                            component={PetList}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/pets/edit/:id\"\r\n                            exact\r\n                            component={PetEdit}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/pets/register\"\r\n                            exact\r\n                            component={PetRegister}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            path=\"/owners\"\r\n                            exact\r\n                            component={OwnerList}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/owners/edit/:id\"\r\n                            exact\r\n                            component={OwnerEdit}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/owners/register\"\r\n                            exact\r\n                            component={OwnerRegister}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            path=\"/users\"\r\n                            exact\r\n                            component={UserList}\r\n                            isAuthenticated={isAuthenticated}\r\n                            isAdmin={isAdmin}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/users/add\"\r\n                            exact\r\n                            component={UserRegister}\r\n                            isAuthenticated={isAuthenticated}\r\n                            isAdmin={isAdmin}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/users/edit/:id\"\r\n                            exact\r\n                            component={UserEdit}\r\n                            isAuthenticated={isAuthenticated}\r\n                            isAdmin={isAdmin}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            path=\"/setting\"\r\n                            exact\r\n                            component={Setting}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            path=\"/report\"\r\n                            exact\r\n                            component={Report}\r\n                            isAuthenticated={isAuthenticated}\r\n                            isAdmin={isAdmin}\r\n                        />\r\n\r\n                        <PublicRoute\r\n                            path=\"/login\"\r\n                            component={AccountLogin}\r\n                            isAuthenticated={isAuthenticated}\r\n                        />\r\n\r\n                        <Redirect to={isAuthenticated ? \"/\" : \"/login\"} />\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n            {isAuthenticated && <Footer />}\r\n        </Router>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport \"./assets/css/App.css\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport STLRouter from \"./routes/router\";\nimport { verifyTokenAsync } from \"./actions/auth-async.action\";\nimport { Row } from \"react-bootstrap\";\n\nexport default function App() {\n    const auth_obj = useSelector((state) => state.auth);\n    const dispatch = useDispatch();\n\n    const { authLoading } = auth_obj;\n\n    useEffect(() => {\n        dispatch(verifyTokenAsync());\n    }, [dispatch]);\n\n    if (authLoading) {\n        return (\n            <Row className=\"vh-100\">\n                <ClipLoader\n                    css=\"margin: auto;\"\n                    size={100}\n                    color={\"#ff0000\"}\n                    loading={authLoading}\n                />\n            </Row>\n        );\n    }\n    return <STLRouter />;\n}\n","import {\r\n    VERIFY_TOKEN_STARTED, VERIFY_TOKEN_END, USER_LOGIN_STARTED, USER_LOGIN_FAILURE, VERIFY_USER_SUCCESS, USER_LOGOUT\r\n} from \"../actions/env.action\";\r\n\r\n// define initial state of auth reducer\r\nconst initialState = {\r\n    token: null, // manage the access token\r\n    expiredAt: null, // manage expiry time of the access token\r\n    user: null, // manage the user details\r\n    authLoading: true, // to indicate that the auth API is in progress\r\n    isAuthenticated: false, // consider as a authentication flag\r\n    loginLoading: false, // to indicate that the user signin API is in progress\r\n    loginError: null // manage the error of the user signin API\r\n}\r\n\r\n// update store based on type and payload and return the state\r\nconst auth = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // verify token - started\r\n        case VERIFY_TOKEN_STARTED:\r\n            const { silentAuth } = action.payload;\r\n            return silentAuth ? {\r\n                ...state\r\n            } : initialState;\r\n        // verify token - ended/failed\r\n        case VERIFY_TOKEN_END:\r\n            return {\r\n                ...state,\r\n                authLoading: false\r\n            };\r\n        // user login - started\r\n        case USER_LOGIN_STARTED:\r\n            return {\r\n                ...state,\r\n                loginLoading: true\r\n            };\r\n        // user login - ended/failed\r\n        case USER_LOGIN_FAILURE:\r\n            const { error } = action.payload;\r\n            return {\r\n                ...state,\r\n                loginError: error,\r\n                loginLoading: false\r\n            };\r\n        // verify token - success\r\n        case VERIFY_USER_SUCCESS:\r\n            const { token, expiredAt, user } = action.payload;\r\n            return {\r\n                ...state,\r\n                token,\r\n                expiredAt,\r\n                user,\r\n                isAuthenticated: true,\r\n                authLoading: false,\r\n                loginLoading: false\r\n            }\r\n        // handle user logout\r\n        case USER_LOGOUT:\r\n            return {\r\n                ...initialState,\r\n                authLoading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth;","import { combineReducers } from 'redux';\r\nimport auth from './auth.reducer';\r\n\r\n// to combine all reducers together\r\nconst appReducer = combineReducers({\r\n    auth\r\n});\r\n\r\nexport default appReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport appReducer from './reducers';\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n    // other store enhancers if any\r\n);\r\n\r\nexport default createStore(\r\n    appReducer, enhancer\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport Store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/css/index.css\";\n\n// window.$server_url = \"http://localhost:8080\"; // For Development\nwindow.$server_url = \"https://admin.klikz.us:8443\"; // For Production\n\nReactDOM.render(\n    <Provider store={Store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/nophoto.0f35df8a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.1b1ab04b.png\";","module.exports = __webpack_public_path__ + \"static/media/user-register.28e15831.jpg\";"],"sourceRoot":""}